[
  {
    "module": "aws-apigateway",
    "name": "CfnApiKey",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnAuthorizer",
    "missingProps": [
      "authorizerCredentials",
      "authorizerResultTtlInSeconds",
      "authorizerUri",
      "authType",
      "identitySource",
      "identityValidationExpression",
      "name",
      "providerArns",
      "restApiId",
      "type"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnBasePathMapping",
    "missingProps": [
      "id"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnDomainName",
    "missingProps": [
      "ownershipVerificationCertificateArn",
      "tags"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnGatewayResponse",
    "missingProps": [
      "responseParameters",
      "responseTemplates",
      "responseType",
      "restApiId",
      "statusCode"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnMethod",
    "missingProps": [
      "apiKeyRequired",
      "authorizationScopes",
      "authorizationType",
      "authorizerId",
      "httpMethod",
      "integration",
      "methodResponses",
      "operationName",
      "requestModels",
      "requestParameters",
      "requestValidatorId",
      "resourceId",
      "restApiId"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnModel",
    "missingProps": [
      "contentType",
      "description",
      "name",
      "restApiId",
      "schema"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnRequestValidator",
    "missingProps": [
      "name",
      "restApiId",
      "validateRequestBody",
      "validateRequestParameters"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnResource",
    "missingProps": [
      "parentId",
      "pathPart",
      "restApiId"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnRestApi",
    "missingProps": [
      "apiKeySourceType",
      "binaryMediaTypes",
      "cloneFrom",
      "description",
      "mode",
      "tags"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnStage",
    "missingProps": [
      "canarySetting",
      "tags"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnUsagePlan",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnVpcLink",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-apigatewayv2",
    "name": "CfnApi",
    "missingProps": [
      "basePath",
      "body",
      "bodyS3Location",
      "corsConfiguration",
      "credentialsArn",
      "disableExecuteApiEndpoint",
      "disableSchemaValidation",
      "failOnWarnings",
      "routeKey",
      "tags",
      "target",
      "version"
    ]
  },
  {
    "module": "aws-apigatewayv2",
    "name": "CfnApiMapping",
    "missingProps": [
      "apiId",
      "apiMappingKey",
      "domainName",
      "stage"
    ]
  },
  {
    "module": "aws-apigatewayv2",
    "name": "CfnAuthorizer",
    "missingProps": [
      "authorizerCredentialsArn",
      "authorizerPayloadFormatVersion",
      "authorizerResultTtlInSeconds",
      "enableSimpleResponses",
      "identityValidationExpression",
      "jwtConfiguration"
    ]
  },
  {
    "module": "aws-apigatewayv2",
    "name": "CfnDomainName",
    "missingProps": [
      "domainName",
      "domainNameConfigurations",
      "mutualTlsAuthentication",
      "tags"
    ]
  },
  {
    "module": "aws-apigatewayv2",
    "name": "CfnIntegration",
    "missingProps": [
      "connectionId",
      "connectionType",
      "description",
      "integrationSubtype",
      "payloadFormatVersion",
      "responseParameters",
      "tlsConfig"
    ]
  },
  {
    "module": "aws-apigatewayv2",
    "name": "CfnRoute",
    "missingProps": [
      "authorizationScopes",
      "modelSelectionExpression",
      "operationName",
      "requestModels",
      "requestParameters"
    ]
  },
  {
    "module": "aws-apigatewayv2",
    "name": "CfnStage",
    "missingProps": [
      "accessLogSettings",
      "accessPolicyId",
      "clientCertificateId",
      "deploymentId",
      "routeSettings",
      "stageVariables",
      "tags"
    ]
  },
  {
    "module": "aws-apigatewayv2",
    "name": "CfnVpcLink",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-appconfig",
    "name": "CfnApplication",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-appconfig",
    "name": "CfnConfigurationProfile",
    "missingProps": [
      "kmsKeyIdentifier",
      "tags"
    ]
  },
  {
    "module": "aws-appconfig",
    "name": "CfnDeploymentStrategy",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-appconfig",
    "name": "CfnEnvironment",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-appconfig",
    "name": "CfnExtension",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-applicationautoscaling",
    "name": "CfnScalableTarget",
    "missingProps": [
      "suspendedState"
    ]
  },
  {
    "module": "aws-applicationautoscaling",
    "name": "CfnScalingPolicy",
    "missingProps": [
      "resourceId",
      "scalableDimension",
      "serviceNamespace",
      "stepScalingPolicyConfiguration"
    ]
  },
  {
    "module": "aws-appmesh",
    "name": "CfnGatewayRoute",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-appmesh",
    "name": "CfnMesh",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-appmesh",
    "name": "CfnRoute",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-appmesh",
    "name": "CfnVirtualGateway",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-appmesh",
    "name": "CfnVirtualNode",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-appmesh",
    "name": "CfnVirtualRouter",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-appmesh",
    "name": "CfnVirtualService",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-appsync",
    "name": "CfnDataSource",
    "missingProps": [
      "dynamoDbConfig",
      "elasticsearchConfig",
      "eventBridgeConfig",
      "httpConfig",
      "lambdaConfig",
      "metricsConfig",
      "openSearchServiceConfig",
      "relationalDatabaseConfig",
      "type"
    ]
  },
  {
    "module": "aws-appsync",
    "name": "CfnFunctionConfiguration",
    "missingProps": [
      "requestMappingTemplateS3Location",
      "responseMappingTemplateS3Location",
      "syncConfig"
    ]
  },
  {
    "module": "aws-appsync",
    "name": "CfnGraphQLApi",
    "missingProps": [
      "enhancedMetricsConfig",
      "tags"
    ]
  },
  {
    "module": "aws-appsync",
    "name": "CfnResolver",
    "missingProps": [
      "metricsConfig",
      "requestMappingTemplateS3Location",
      "responseMappingTemplateS3Location",
      "syncConfig"
    ]
  },
  {
    "module": "aws-autoscaling",
    "name": "CfnScalingPolicy",
    "missingProps": [
      "adjustmentType",
      "metricAggregationType",
      "minAdjustmentMagnitude",
      "predictiveScalingConfiguration",
      "scalingAdjustment",
      "stepAdjustments"
    ]
  },
  {
    "module": "aws-backup",
    "name": "CfnBackupPlan",
    "missingProps": [
      "backupPlanTags"
    ]
  },
  {
    "module": "aws-backup",
    "name": "CfnBackupVault",
    "missingProps": [
      "backupVaultTags"
    ]
  },
  {
    "module": "aws-batch",
    "name": "CfnComputeEnvironment",
    "missingProps": [
      "computeResources",
      "context",
      "eksConfiguration",
      "replaceComputeEnvironment",
      "tags",
      "updatePolicy"
    ]
  },
  {
    "module": "aws-batch",
    "name": "CfnJobDefinition",
    "missingProps": [
      "containerProperties",
      "ecsProperties",
      "eksProperties",
      "parameters",
      "retryStrategy",
      "schedulingPriority",
      "tags",
      "timeout"
    ]
  },
  {
    "module": "aws-batch",
    "name": "CfnJobQueue",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-batch",
    "name": "CfnSchedulingPolicy",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-certificatemanager",
    "name": "CfnCertificate",
    "missingProps": [
      "certificateTransparencyLoggingPreference",
      "domainValidationOptions",
      "tags",
      "validationMethod"
    ]
  },
  {
    "module": "aws-chatbot",
    "name": "CfnSlackChannelConfiguration",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-cloudfront",
    "name": "CfnDistribution",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-cloudfront",
    "name": "CfnFunction",
    "missingProps": [
      "functionMetadata"
    ]
  },
  {
    "module": "aws-cloudtrail",
    "name": "CfnTrail",
    "missingProps": [
      "advancedEventSelectors",
      "tags"
    ]
  },
  {
    "module": "aws-cloudwatch",
    "name": "CfnAlarm",
    "missingProps": [
      "dimensions",
      "extendedStatistic",
      "metricName",
      "metrics",
      "namespace",
      "period",
      "statistic",
      "tags",
      "thresholdMetricId",
      "unit"
    ]
  },
  {
    "module": "aws-cloudwatch",
    "name": "CfnCompositeAlarm",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-codebuild",
    "name": "CfnFleet",
    "missingProps": [
      "fleetServiceRole",
      "fleetVpcConfig",
      "imageId",
      "overflowBehavior",
      "tags"
    ]
  },
  {
    "module": "aws-codebuild",
    "name": "CfnProject",
    "missingProps": [
      "resourceAccessRole",
      "tags"
    ]
  },
  {
    "module": "aws-codebuild",
    "name": "CfnReportGroup",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-codebuild",
    "name": "CfnSourceCredential",
    "missingProps": [
      "username"
    ]
  },
  {
    "module": "aws-codecommit",
    "name": "CfnRepository",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-codedeploy",
    "name": "CfnApplication",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-codedeploy",
    "name": "CfnDeploymentGroup",
    "missingProps": [
      "blueGreenDeploymentConfiguration",
      "deployment",
      "ec2TagFilters",
      "ecsServices",
      "onPremisesInstanceTagFilters",
      "outdatedInstancesStrategy",
      "tags",
      "triggerConfigurations"
    ]
  },
  {
    "module": "aws-codepipeline",
    "name": "CfnCustomActionType",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-codepipeline",
    "name": "CfnPipeline",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-codestarnotifications",
    "name": "CfnNotificationRule",
    "missingProps": [
      "eventTypeId",
      "tags",
      "targetAddress"
    ]
  },
  {
    "module": "aws-cognito",
    "name": "CfnUserPool",
    "missingProps": [
      "emailAuthenticationMessage",
      "emailAuthenticationSubject",
      "userPoolTags"
    ]
  },
  {
    "module": "aws-cognito",
    "name": "CfnUserPoolClient",
    "missingProps": [
      "accessTokenValidity",
      "analyticsConfiguration",
      "authSessionValidity",
      "idTokenValidity",
      "refreshTokenValidity",
      "tokenValidityUnits"
    ]
  },
  {
    "module": "aws-config",
    "name": "CfnConfigRule",
    "missingProps": [
      "compliance"
    ]
  },
  {
    "module": "aws-docdb",
    "name": "CfnDBCluster",
    "missingProps": [
      "availabilityZones",
      "restoreToTime",
      "restoreType",
      "snapshotIdentifier",
      "sourceDbClusterIdentifier",
      "tags",
      "useLatestRestorableTime"
    ]
  },
  {
    "module": "aws-docdb",
    "name": "CfnDBClusterParameterGroup",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-docdb",
    "name": "CfnDBInstance",
    "missingProps": [
      "certificateRotationRestart",
      "tags"
    ]
  },
  {
    "module": "aws-dynamodb",
    "name": "CfnTable",
    "missingProps": [
      "onDemandThroughput",
      "tags"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnClientVpnEndpoint",
    "missingProps": [
      "tagSpecifications"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnInstance",
    "missingProps": [
      "additionalInfo",
      "affinity",
      "cpuOptions",
      "disableApiTermination",
      "elasticGpuSpecifications",
      "elasticInferenceAccelerators",
      "hostId",
      "hostResourceGroupArn",
      "ipv6Addresses",
      "kernelId",
      "launchTemplate",
      "licenseSpecifications",
      "privateDnsNameOptions",
      "ramdiskId",
      "securityGroups",
      "ssmAssociations",
      "tags",
      "tenancy",
      "volumes"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnKeyPair",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnNetworkAcl",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnNetworkAclEntry",
    "missingProps": [
      "cidrBlock",
      "icmp",
      "ipv6CidrBlock",
      "portRange",
      "protocol"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnPlacementGroup",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnPrefixList",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnSecurityGroup",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnVolume",
    "missingProps": [
      "outpostArn",
      "tags"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnVPC",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnVPCEndpoint",
    "missingProps": [
      "privateDnsEnabled",
      "securityGroupIds",
      "subnetIds"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnVPNConnection",
    "missingProps": [
      "enableAcceleration",
      "localIpv4NetworkCidr",
      "localIpv6NetworkCidr",
      "outsideIpAddressType",
      "remoteIpv4NetworkCidr",
      "remoteIpv6NetworkCidr",
      "tags",
      "transitGatewayId",
      "transportTransitGatewayAttachmentId",
      "tunnelInsideIpVersion"
    ]
  },
  {
    "module": "aws-ecr",
    "name": "CfnRepository",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-ecs",
    "name": "CfnCluster",
    "missingProps": [
      "capacityProviders",
      "defaultCapacityProviderStrategy",
      "serviceConnectDefaults",
      "tags"
    ]
  },
  {
    "module": "aws-ecs",
    "name": "CfnTaskDefinition",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-efs",
    "name": "CfnAccessPoint",
    "missingProps": [
      "accessPointTags",
      "clientToken"
    ]
  },
  {
    "module": "aws-efs",
    "name": "CfnFileSystem",
    "missingProps": [
      "bypassPolicyLockoutSafetyCheck",
      "fileSystemTags"
    ]
  },
  {
    "module": "aws-eks",
    "name": "CfnAccessEntry",
    "missingProps": [
      "kubernetesGroups",
      "tags",
      "username"
    ]
  },
  {
    "module": "aws-eks",
    "name": "CfnAddon",
    "missingProps": [
      "configurationValues",
      "podIdentityAssociations",
      "resolveConflicts",
      "serviceAccountRoleArn",
      "tags"
    ]
  },
  {
    "module": "aws-eks",
    "name": "CfnNodegroup",
    "missingProps": [
      "version"
    ]
  },
  {
    "module": "aws-elasticloadbalancing",
    "name": "CfnLoadBalancer",
    "missingProps": [
      "accessLoggingPolicy",
      "appCookieStickinessPolicy",
      "availabilityZones",
      "connectionDrainingPolicy",
      "connectionSettings",
      "lbCookieStickinessPolicy",
      "loadBalancerName",
      "policies",
      "tags"
    ]
  },
  {
    "module": "aws-elasticloadbalancingv2",
    "name": "CfnListener",
    "missingProps": [
      "alpnPolicy",
      "certificates",
      "loadBalancerArn",
      "mutualAuthentication",
      "port",
      "protocol",
      "sslPolicy"
    ]
  },
  {
    "module": "aws-elasticloadbalancingv2",
    "name": "CfnLoadBalancer",
    "missingProps": [
      "enforceSecurityGroupInboundRulesOnPrivateLinkTraffic",
      "ipAddressType",
      "securityGroups",
      "subnetMappings",
      "tags",
      "type"
    ]
  },
  {
    "module": "aws-elasticloadbalancingv2",
    "name": "CfnTargetGroup",
    "missingProps": [
      "ipAddressType",
      "port",
      "protocol",
      "protocolVersion",
      "tags"
    ]
  },
  {
    "module": "aws-elasticloadbalancingv2",
    "name": "CfnTrustStore",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-elasticsearch",
    "name": "CfnDomain",
    "missingProps": [
      "accessPolicies",
      "domainArn",
      "tags"
    ]
  },
  {
    "module": "aws-events",
    "name": "CfnEventBus",
    "missingProps": [
      "deadLetterConfig",
      "policy",
      "tags"
    ]
  },
  {
    "module": "aws-events",
    "name": "CfnEventBusPolicy",
    "missingProps": [
      "action",
      "condition",
      "principal"
    ]
  },
  {
    "module": "aws-events",
    "name": "CfnRule",
    "missingProps": [
      "roleArn"
    ]
  },
  {
    "module": "aws-fsx",
    "name": "CfnFileSystem",
    "missingProps": [
      "fileSystemTypeVersion",
      "ontapConfiguration",
      "openZfsConfiguration",
      "tags",
      "windowsConfiguration"
    ]
  },
  {
    "module": "aws-iam",
    "name": "CfnGroup",
    "missingProps": [
      "policies"
    ]
  },
  {
    "module": "aws-iam",
    "name": "CfnRole",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-iam",
    "name": "CfnSAMLProvider",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-iam",
    "name": "CfnUser",
    "missingProps": [
      "policies",
      "tags"
    ]
  },
  {
    "module": "aws-kinesis",
    "name": "CfnStream",
    "missingProps": [
      "streamModeDetails",
      "tags"
    ]
  },
  {
    "module": "aws-kms",
    "name": "CfnKey",
    "missingProps": [
      "bypassPolicyLockoutSafetyCheck",
      "origin",
      "tags"
    ]
  },
  {
    "module": "aws-lambda",
    "name": "CfnCodeSigningConfig",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-lambda",
    "name": "CfnEventSourceMapping",
    "missingProps": [
      "documentDbEventSourceConfig",
      "queues",
      "tags"
    ]
  },
  {
    "module": "aws-lambda",
    "name": "CfnFunction",
    "missingProps": [
      "tags",
      "tracingConfig"
    ]
  },
  {
    "module": "aws-lambda",
    "name": "CfnVersion",
    "missingProps": [
      "policy",
      "runtimePolicy"
    ]
  },
  {
    "module": "aws-logs",
    "name": "CfnLogGroup",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-opensearchservice",
    "name": "CfnDomain",
    "missingProps": [
      "accessPolicies",
      "domainArn",
      "skipShardMigrationWait",
      "tags"
    ]
  },
  {
    "module": "aws-rds",
    "name": "CfnDBCluster",
    "missingProps": [
      "allocatedStorage",
      "associatedRoles",
      "autoMinorVersionUpgrade",
      "availabilityZones",
      "backtrackWindow",
      "backupRetentionPeriod",
      "copyTagsToSnapshot",
      "databaseName",
      "dbClusterIdentifier",
      "dbClusterInstanceClass",
      "dbClusterParameterGroupName",
      "dbInstanceParameterGroupName",
      "dbSubnetGroupName",
      "dbSystemId",
      "deletionProtection",
      "domain",
      "domainIamRoleName",
      "enableCloudwatchLogsExports",
      "enableGlobalWriteForwarding",
      "enableHttpEndpoint",
      "enableIamDatabaseAuthentication",
      "enableLocalWriteForwarding",
      "engine",
      "engineLifecycleSupport",
      "engineMode",
      "engineVersion",
      "globalClusterIdentifier",
      "iops",
      "manageMasterUserPassword",
      "masterUserSecret",
      "monitoringInterval",
      "monitoringRoleArn",
      "networkType",
      "performanceInsightsEnabled",
      "performanceInsightsKmsKeyId",
      "performanceInsightsRetentionPeriod",
      "port",
      "preferredBackupWindow",
      "preferredMaintenanceWindow",
      "publiclyAccessible",
      "replicationSourceIdentifier",
      "restoreToTime",
      "restoreType",
      "scalingConfiguration",
      "serverlessV2ScalingConfiguration",
      "snapshotIdentifier",
      "sourceDbClusterIdentifier",
      "sourceRegion",
      "storageEncrypted",
      "storageType",
      "tags",
      "useLatestRestorableTime",
      "vpcSecurityGroupIds"
    ]
  },
  {
    "module": "aws-rds",
    "name": "CfnDBInstance",
    "missingProps": [
      "allocatedStorage",
      "allowMajorVersionUpgrade",
      "associatedRoles",
      "automaticBackupReplicationKmsKeyId",
      "automaticBackupReplicationRegion",
      "autoMinorVersionUpgrade",
      "availabilityZone",
      "backupRetentionPeriod",
      "caCertificateIdentifier",
      "certificateDetails",
      "certificateRotationRestart",
      "copyTagsToSnapshot",
      "customIamInstanceProfile",
      "dbClusterIdentifier",
      "dbClusterSnapshotIdentifier",
      "dbInstanceClass",
      "dbInstanceIdentifier",
      "dbName",
      "dbParameterGroupName",
      "dbSecurityGroups",
      "dbSnapshotIdentifier",
      "dbSubnetGroupName",
      "dedicatedLogVolume",
      "deleteAutomatedBackups",
      "deletionProtection",
      "domain",
      "domainAuthSecretArn",
      "domainDnsIps",
      "domainFqdn",
      "domainIamRoleName",
      "domainOu",
      "enableCloudwatchLogsExports",
      "enableIamDatabaseAuthentication",
      "enablePerformanceInsights",
      "endpoint",
      "engine",
      "engineLifecycleSupport",
      "engineVersion",
      "iops",
      "licenseModel",
      "manageMasterUserPassword",
      "masterUserSecret",
      "maxAllocatedStorage",
      "monitoringInterval",
      "monitoringRoleArn",
      "multiAz",
      "ncharCharacterSetName",
      "networkType",
      "optionGroupName",
      "performanceInsightsKmsKeyId",
      "performanceInsightsRetentionPeriod",
      "port",
      "preferredBackupWindow",
      "preferredMaintenanceWindow",
      "processorFeatures",
      "promotionTier",
      "publiclyAccessible",
      "replicaMode",
      "restoreTime",
      "sourceDbClusterIdentifier",
      "sourceDbInstanceAutomatedBackupsArn",
      "sourceDbInstanceIdentifier",
      "sourceDbiResourceId",
      "sourceRegion",
      "storageThroughput",
      "storageType",
      "tags",
      "tdeCredentialArn",
      "tdeCredentialPassword",
      "timezone",
      "useDefaultProcessorFeatures",
      "useLatestRestorableTime",
      "vpcSecurityGroups"
    ]
  },
  {
    "module": "aws-rds",
    "name": "CfnDBProxy",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-rds",
    "name": "CfnOptionGroup",
    "missingProps": [
      "optionGroupName",
      "tags"
    ]
  },
  {
    "module": "aws-route53",
    "name": "CfnHostedZone",
    "missingProps": [
      "hostedZoneTags"
    ]
  },
  {
    "module": "aws-route53",
    "name": "CfnRecordSet",
    "missingProps": [
      "cidrRoutingConfig",
      "failover",
      "geoProximityLocation",
      "healthCheckId",
      "hostedZoneName"
    ]
  },
  {
    "module": "aws-s3",
    "name": "CfnBucket",
    "missingProps": [
      "analyticsConfigurations",
      "notificationConfiguration",
      "replicationConfiguration",
      "tags"
    ]
  },
  {
    "module": "aws-secretsmanager",
    "name": "CfnResourcePolicy",
    "missingProps": [
      "blockPublicPolicy"
    ]
  },
  {
    "module": "aws-servicecatalog",
    "name": "CfnCloudFormationProduct",
    "missingProps": [
      "productType",
      "sourceConnection",
      "tags"
    ]
  },
  {
    "module": "aws-servicecatalog",
    "name": "CfnPortfolio",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-servicediscovery",
    "name": "CfnHttpNamespace",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-servicediscovery",
    "name": "CfnPrivateDnsNamespace",
    "missingProps": [
      "properties",
      "tags"
    ]
  },
  {
    "module": "aws-servicediscovery",
    "name": "CfnPublicDnsNamespace",
    "missingProps": [
      "properties",
      "tags"
    ]
  },
  {
    "module": "aws-servicediscovery",
    "name": "CfnService",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-signer",
    "name": "CfnSigningProfile",
    "missingProps": [
      "profileName",
      "tags"
    ]
  },
  {
    "module": "aws-sns",
    "name": "CfnSubscription",
    "missingProps": [
      "deliveryPolicy",
      "replayPolicy"
    ]
  },
  {
    "module": "aws-sns",
    "name": "CfnTopic",
    "missingProps": [
      "dataProtectionPolicy",
      "subscription",
      "tags"
    ]
  },
  {
    "module": "aws-sqs",
    "name": "CfnQueue",
    "missingProps": [
      "contentBasedDeduplication",
      "deduplicationScope",
      "fifoQueue",
      "fifoThroughputLimit",
      "kmsDataKeyReusePeriodSeconds",
      "kmsMasterKeyId",
      "sqsManagedSseEnabled",
      "tags"
    ]
  },
  {
    "module": "aws-stepfunctions",
    "name": "CfnActivity",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-stepfunctions",
    "name": "CfnStateMachine",
    "missingProps": [
      "definition",
      "definitionS3Location",
      "definitionString",
      "tags"
    ]
  },
  {
    "module": "aws-synthetics",
    "name": "CfnCanary",
    "missingProps": [
      "artifactConfig",
      "deleteLambdaResourcesOnCanaryDeletion",
      "resourcesToReplicateTags",
      "tags",
      "visualReference"
    ]
  }
]