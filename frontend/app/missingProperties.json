[
  {
    "module": "aws-servicecatalogappregistry-alpha",
    "name": "CfnApplication",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-servicecatalogappregistry-alpha",
    "name": "CfnAttributeGroup",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-route53resolver-alpha",
    "name": "CfnFirewallDomainList",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-route53resolver-alpha",
    "name": "CfnFirewallRuleGroup",
    "missingProps": [
      "tags",
      "firewallRules.action",
      "firewallRules.blockOverrideDnsType",
      "firewallRules.blockOverrideDomain",
      "firewallRules.blockOverrideTtl",
      "firewallRules.blockResponse",
      "firewallRules.confidenceThreshold",
      "firewallRules.dnsThreatProtection",
      "firewallRules.firewallDomainListId",
      "firewallRules.firewallDomainRedirectionAction",
      "firewallRules.firewallThreatProtectionId",
      "firewallRules.priority",
      "firewallRules.qtype"
    ]
  },
  {
    "module": "aws-route53resolver-alpha",
    "name": "CfnFirewallRuleGroupAssociation",
    "missingProps": [
      "mutationProtection",
      "name",
      "tags"
    ]
  },
  {
    "module": "aws-redshift-alpha",
    "name": "CfnCluster",
    "missingProps": [
      "aquaConfigurationStatus",
      "availabilityZone",
      "availabilityZoneRelocationStatus",
      "clusterSecurityGroups",
      "clusterVersion",
      "deferMaintenance",
      "deferMaintenanceDuration",
      "deferMaintenanceEndTime",
      "deferMaintenanceStartTime",
      "destinationRegion",
      "endpoint",
      "hsmClientCertificateIdentifier",
      "hsmConfigurationIdentifier",
      "manageMasterPassword",
      "manualSnapshotRetentionPeriod",
      "masterPasswordSecretKmsKeyId",
      "namespaceResourcePolicy",
      "ownerAccount",
      "revisionTarget",
      "rotateEncryptionKey",
      "snapshotClusterIdentifier",
      "snapshotCopyGrantName",
      "snapshotCopyManual",
      "snapshotCopyRetentionPeriod",
      "snapshotIdentifier",
      "tags",
      "loggingProperties.bucketName",
      "loggingProperties.logDestinationType",
      "loggingProperties.logExports",
      "loggingProperties.s3KeyPrefix"
    ]
  },
  {
    "module": "aws-redshift-alpha",
    "name": "CfnClusterParameterGroup",
    "missingProps": [
      "parameterGroupName",
      "tags",
      "parameters.parameterName",
      "parameters.parameterValue"
    ]
  },
  {
    "module": "aws-pipes-alpha",
    "name": "CfnPipe",
    "missingProps": [
      "enrichmentParameters.httpParameters",
      "enrichmentParameters.inputTemplate",
      "logConfiguration.cloudwatchLogsLogDestination",
      "logConfiguration.firehoseLogDestination",
      "logConfiguration.includeExecutionData",
      "logConfiguration.level",
      "logConfiguration.s3LogDestination",
      "sourceParameters.activeMqBrokerParameters",
      "sourceParameters.dynamoDbStreamParameters",
      "sourceParameters.filterCriteria",
      "sourceParameters.kinesisStreamParameters",
      "sourceParameters.managedStreamingKafkaParameters",
      "sourceParameters.rabbitMqBrokerParameters",
      "sourceParameters.selfManagedKafkaParameters",
      "sourceParameters.sqsQueueParameters",
      "targetParameters.batchJobParameters",
      "targetParameters.cloudWatchLogsParameters",
      "targetParameters.ecsTaskParameters",
      "targetParameters.eventBridgeEventBusParameters",
      "targetParameters.httpParameters",
      "targetParameters.inputTemplate",
      "targetParameters.kinesisStreamParameters",
      "targetParameters.lambdaFunctionParameters",
      "targetParameters.redshiftDataParameters",
      "targetParameters.sageMakerPipelineParameters",
      "targetParameters.sqsQueueParameters",
      "targetParameters.stepFunctionStateMachineParameters",
      "targetParameters.timestreamParameters"
    ]
  },
  {
    "module": "aws-neptune-alpha",
    "name": "CfnDBCluster",
    "missingProps": [
      "availabilityZones",
      "dbInstanceParameterGroupName",
      "restoreToTime",
      "restoreType",
      "snapshotIdentifier",
      "sourceDbClusterIdentifier",
      "tags",
      "useLatestRestorableTime",
      "associatedRoles.featureName",
      "associatedRoles.roleArn",
      "serverlessScalingConfiguration.maxCapacity",
      "serverlessScalingConfiguration.minCapacity"
    ]
  },
  {
    "module": "aws-neptune-alpha",
    "name": "CfnDBClusterParameterGroup",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-neptune-alpha",
    "name": "CfnDBInstance",
    "missingProps": [
      "allowMajorVersionUpgrade",
      "dbSnapshotIdentifier",
      "dbSubnetGroupName",
      "preferredMaintenanceWindow",
      "tags"
    ]
  },
  {
    "module": "aws-neptune-alpha",
    "name": "CfnDBParameterGroup",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-neptune-alpha",
    "name": "CfnDBSubnetGroup",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-msk-alpha",
    "name": "CfnCluster",
    "missingProps": [
      "currentVersion",
      "tags",
      "brokerNodeGroupInfo.brokerAzDistribution",
      "brokerNodeGroupInfo.connectivityInfo",
      "brokerNodeGroupInfo.storageInfo.ebsStorageInfo.provisionedThroughput",
      "clientAuthentication.sasl",
      "configurationInfo.arn",
      "configurationInfo.revision",
      "encryptionInfo.encryptionAtRest.dataVolumeKmsKeyId",
      "encryptionInfo.encryptionInTransit.clientBroker",
      "encryptionInfo.encryptionInTransit.inCluster",
      "loggingInfo.brokerLogs",
      "openMonitoring.prometheus"
    ]
  },
  {
    "module": "aws-msk-alpha",
    "name": "CfnServerlessCluster",
    "missingProps": [
      "tags",
      "vpcConfigs.securityGroups",
      "vpcConfigs.subnetIds"
    ]
  },
  {
    "module": "aws-location-alpha",
    "name": "CfnAPIKey",
    "missingProps": [
      "tags",
      "restrictions.allowActions",
      "restrictions.allowReferers",
      "restrictions.allowResources"
    ]
  },
  {
    "module": "aws-location-alpha",
    "name": "CfnGeofenceCollection",
    "missingProps": [
      "pricingPlan",
      "pricingPlanDataSource",
      "tags"
    ]
  },
  {
    "module": "aws-location-alpha",
    "name": "CfnMap",
    "missingProps": [
      "pricingPlan",
      "tags"
    ]
  },
  {
    "module": "aws-location-alpha",
    "name": "CfnPlaceIndex",
    "missingProps": [
      "pricingPlan",
      "tags",
      "dataSourceConfiguration.intendedUse"
    ]
  },
  {
    "module": "aws-location-alpha",
    "name": "CfnRouteCalculator",
    "missingProps": [
      "pricingPlan",
      "tags"
    ]
  },
  {
    "module": "aws-location-alpha",
    "name": "CfnTracker",
    "missingProps": [
      "pricingPlan",
      "pricingPlanDataSource",
      "tags"
    ]
  },
  {
    "module": "aws-ivs-alpha",
    "name": "CfnChannel",
    "missingProps": [
      "tags",
      "multitrackInputConfiguration.enabled",
      "multitrackInputConfiguration.maximumResolution",
      "multitrackInputConfiguration.policy"
    ]
  },
  {
    "module": "aws-ivs-alpha",
    "name": "CfnPlaybackKeyPair",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-ivs-alpha",
    "name": "CfnRecordingConfiguration",
    "missingProps": [
      "tags",
      "renditionConfiguration.renditions",
      "renditionConfiguration.renditionSelection",
      "thumbnailConfiguration.participantThumbnailConfiguration"
    ]
  },
  {
    "module": "aws-ivs-alpha",
    "name": "CfnStreamKey",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-iotevents-alpha",
    "name": "CfnDetectorModel",
    "missingProps": [
      "tags",
      "detectorModelDefinition.states.onEnter",
      "detectorModelDefinition.states.onExit",
      "detectorModelDefinition.states.onInput",
      "detectorModelDefinition.states.stateName"
    ]
  },
  {
    "module": "aws-iotevents-alpha",
    "name": "CfnInput",
    "missingProps": [
      "inputDescription",
      "tags",
      "inputDefinition.attributes.jsonPath"
    ]
  },
  {
    "module": "aws-iot-alpha",
    "name": "CfnTopicRule",
    "missingProps": [
      "tags",
      "topicRulePayload.actions.cloudwatchAlarm",
      "topicRulePayload.actions.cloudwatchLogs",
      "topicRulePayload.actions.cloudwatchMetric",
      "topicRulePayload.actions.dynamoDb",
      "topicRulePayload.actions.dynamoDBv2",
      "topicRulePayload.actions.elasticsearch",
      "topicRulePayload.actions.firehose",
      "topicRulePayload.actions.http",
      "topicRulePayload.actions.iotAnalytics",
      "topicRulePayload.actions.iotEvents",
      "topicRulePayload.actions.iotSiteWise",
      "topicRulePayload.actions.kafka",
      "topicRulePayload.actions.kinesis",
      "topicRulePayload.actions.lambda",
      "topicRulePayload.actions.location",
      "topicRulePayload.actions.openSearch",
      "topicRulePayload.actions.republish",
      "topicRulePayload.actions.s3",
      "topicRulePayload.actions.sns",
      "topicRulePayload.actions.sqs",
      "topicRulePayload.actions.stepFunctions",
      "topicRulePayload.actions.timestream",
      "topicRulePayload.errorAction.cloudwatchAlarm",
      "topicRulePayload.errorAction.cloudwatchLogs",
      "topicRulePayload.errorAction.cloudwatchMetric",
      "topicRulePayload.errorAction.dynamoDb",
      "topicRulePayload.errorAction.dynamoDBv2",
      "topicRulePayload.errorAction.elasticsearch",
      "topicRulePayload.errorAction.firehose",
      "topicRulePayload.errorAction.http",
      "topicRulePayload.errorAction.iotAnalytics",
      "topicRulePayload.errorAction.iotEvents",
      "topicRulePayload.errorAction.iotSiteWise",
      "topicRulePayload.errorAction.kafka",
      "topicRulePayload.errorAction.kinesis",
      "topicRulePayload.errorAction.lambda",
      "topicRulePayload.errorAction.location",
      "topicRulePayload.errorAction.openSearch",
      "topicRulePayload.errorAction.republish",
      "topicRulePayload.errorAction.s3",
      "topicRulePayload.errorAction.sns",
      "topicRulePayload.errorAction.sqs",
      "topicRulePayload.errorAction.stepFunctions",
      "topicRulePayload.errorAction.timestream"
    ]
  },
  {
    "module": "aws-glue-alpha",
    "name": "CfnConnection",
    "missingProps": [
      "connectionInput.athenaProperties",
      "connectionInput.authenticationConfiguration",
      "connectionInput.pythonProperties",
      "connectionInput.sparkProperties",
      "connectionInput.validateCredentials",
      "connectionInput.validateForComputeEnvironments",
      "connectionInput.physicalConnectionRequirements.availabilityZone",
      "connectionInput.physicalConnectionRequirements.securityGroupIdList",
      "connectionInput.physicalConnectionRequirements.subnetId"
    ]
  },
  {
    "module": "aws-glue-alpha",
    "name": "CfnDatabase",
    "missingProps": [
      "databaseName",
      "databaseInput.createTableDefaultPermissions",
      "databaseInput.description",
      "databaseInput.federatedDatabase",
      "databaseInput.locationUri",
      "databaseInput.name",
      "databaseInput.parameters",
      "databaseInput.targetDatabase"
    ]
  },
  {
    "module": "aws-glue-alpha",
    "name": "CfnDataQualityRuleset",
    "missingProps": [
      "targetTable.databaseName",
      "targetTable.tableName"
    ]
  },
  {
    "module": "aws-glue-alpha",
    "name": "CfnJob",
    "missingProps": [
      "allocatedCapacity",
      "executionClass",
      "jobMode",
      "logUri",
      "maintenanceWindow",
      "maxCapacity",
      "nonOverridableArguments",
      "notificationProperty",
      "command.pythonVersion",
      "command.runtime",
      "connections.connections",
      "executionProperty.maxConcurrentRuns"
    ]
  },
  {
    "module": "aws-glue-alpha",
    "name": "CfnSecurityConfiguration",
    "missingProps": [
      "encryptionConfiguration.cloudWatchEncryption.cloudWatchEncryptionMode",
      "encryptionConfiguration.cloudWatchEncryption.kmsKeyArn",
      "encryptionConfiguration.jobBookmarksEncryption.jobBookmarksEncryptionMode",
      "encryptionConfiguration.jobBookmarksEncryption.kmsKeyArn",
      "encryptionConfiguration.s3Encryptions.kmsKeyArn",
      "encryptionConfiguration.s3Encryptions.s3EncryptionMode"
    ]
  },
  {
    "module": "aws-glue-alpha",
    "name": "CfnWorkflow",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-gamelift-alpha",
    "name": "CfnAlias",
    "missingProps": [
      "tags",
      "routingStrategy.fleetId",
      "routingStrategy.message",
      "routingStrategy.type"
    ]
  },
  {
    "module": "aws-gamelift-alpha",
    "name": "CfnBuild",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-gamelift-alpha",
    "name": "CfnFleet",
    "missingProps": [
      "anywhereConfiguration",
      "applyCapacity",
      "computeType",
      "instanceRoleCredentialsProvider",
      "logPaths",
      "metricGroups",
      "scalingPolicies",
      "scriptId",
      "serverLaunchParameters",
      "serverLaunchPath",
      "tags",
      "ec2InboundPermissions.fromPort",
      "ec2InboundPermissions.ipRange",
      "ec2InboundPermissions.protocol",
      "ec2InboundPermissions.toPort",
      "locations.location",
      "locations.locationCapacity",
      "locations.stoppedActions",
      "resourceCreationLimitPolicy.newGameSessionsPerCreator",
      "resourceCreationLimitPolicy.policyPeriodInMinutes",
      "runtimeConfiguration.gameSessionActivationTimeoutSeconds",
      "runtimeConfiguration.maxConcurrentGameSessionActivations",
      "runtimeConfiguration.serverProcesses"
    ]
  },
  {
    "module": "aws-gamelift-alpha",
    "name": "CfnGameServerGroup",
    "missingProps": [
      "tags",
      "autoScalingPolicy.estimatedInstanceWarmup",
      "autoScalingPolicy.targetTrackingConfiguration",
      "instanceDefinitions.instanceType",
      "instanceDefinitions.weightedCapacity",
      "launchTemplate.launchTemplateId",
      "launchTemplate.launchTemplateName",
      "launchTemplate.version"
    ]
  },
  {
    "module": "aws-gamelift-alpha",
    "name": "CfnGameSessionQueue",
    "missingProps": [
      "tags",
      "destinations.destinationArn",
      "filterConfiguration.allowedLocations",
      "playerLatencyPolicies.maximumIndividualPlayerLatencyMilliseconds",
      "playerLatencyPolicies.policyDurationSeconds",
      "priorityConfiguration.locationOrder",
      "priorityConfiguration.priorityOrder"
    ]
  },
  {
    "module": "aws-gamelift-alpha",
    "name": "CfnMatchmakingRuleSet",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-gamelift-alpha",
    "name": "CfnScript",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-elasticache-alpha",
    "name": "CfnServerlessCache",
    "missingProps": [
      "endpoint",
      "readerEndpoint",
      "tags",
      "cacheUsageLimits.dataStorage",
      "cacheUsageLimits.ecpuPerSecond"
    ]
  },
  {
    "module": "aws-elasticache-alpha",
    "name": "CfnUser",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-elasticache-alpha",
    "name": "CfnUserGroup",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-ec2-alpha",
    "name": "CfnVPC",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-cloud9-alpha",
    "name": "CfnEnvironmentEC2",
    "missingProps": [
      "tags",
      "repositories.pathComponent",
      "repositories.repositoryUrl"
    ]
  },
  {
    "module": "aws-apprunner-alpha",
    "name": "CfnAutoScalingConfiguration",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-apprunner-alpha",
    "name": "CfnObservabilityConfiguration",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-apprunner-alpha",
    "name": "CfnService",
    "missingProps": [
      "tags",
      "encryptionConfiguration.kmsKey",
      "healthCheckConfiguration.healthyThreshold",
      "healthCheckConfiguration.interval",
      "healthCheckConfiguration.path",
      "healthCheckConfiguration.protocol",
      "healthCheckConfiguration.timeout",
      "healthCheckConfiguration.unhealthyThreshold",
      "networkConfiguration.ingressConfiguration.isPubliclyAccessible",
      "observabilityConfiguration.observabilityConfigurationArn",
      "observabilityConfiguration.observabilityEnabled",
      "sourceConfiguration.authenticationConfiguration.accessRoleArn",
      "sourceConfiguration.authenticationConfiguration.connectionArn",
      "sourceConfiguration.codeRepository.codeConfiguration",
      "sourceConfiguration.codeRepository.repositoryUrl",
      "sourceConfiguration.codeRepository.sourceCodeVersion",
      "sourceConfiguration.codeRepository.sourceDirectory",
      "sourceConfiguration.imageRepository.imageConfiguration",
      "sourceConfiguration.imageRepository.imageIdentifier",
      "sourceConfiguration.imageRepository.imageRepositoryType"
    ]
  },
  {
    "module": "aws-apprunner-alpha",
    "name": "CfnVpcConnector",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-apprunner-alpha",
    "name": "CfnVpcIngressConnection",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-amplify-alpha",
    "name": "CfnApp",
    "missingProps": [
      "tags",
      "autoBranchCreationConfig.autoBranchCreationPatterns",
      "autoBranchCreationConfig.basicAuthConfig",
      "autoBranchCreationConfig.buildSpec",
      "autoBranchCreationConfig.enableAutoBranchCreation",
      "autoBranchCreationConfig.enableAutoBuild",
      "autoBranchCreationConfig.enablePerformanceMode",
      "autoBranchCreationConfig.enablePullRequestPreview",
      "autoBranchCreationConfig.environmentVariables",
      "autoBranchCreationConfig.framework",
      "autoBranchCreationConfig.pullRequestEnvironmentName",
      "autoBranchCreationConfig.stage",
      "basicAuthConfig.enableBasicAuth",
      "basicAuthConfig.password",
      "basicAuthConfig.username",
      "cacheConfig.type",
      "customRules.condition",
      "customRules.source",
      "customRules.status",
      "customRules.target",
      "environmentVariables.name",
      "environmentVariables.value",
      "jobConfig.buildComputeType"
    ]
  },
  {
    "module": "aws-amplify-alpha",
    "name": "CfnBranch",
    "missingProps": [
      "backend",
      "framework",
      "tags",
      "basicAuthConfig.enableBasicAuth",
      "basicAuthConfig.password",
      "basicAuthConfig.username",
      "environmentVariables.name",
      "environmentVariables.value"
    ]
  },
  {
    "module": "aws-amplify-alpha",
    "name": "CfnDomain",
    "missingProps": [
      "certificateSettings.certificateType",
      "certificateSettings.customCertificateArn",
      "subDomainSettings.branchName",
      "subDomainSettings.prefix"
    ]
  },
  {
    "module": "aws-synthetics",
    "name": "CfnCanary",
    "missingProps": [
      "deleteLambdaResourcesOnCanaryDeletion",
      "tags",
      "visualReference",
      "visualReferences",
      "artifactConfig.s3Encryption",
      "browserConfigs.browserType",
      "code.dependencies",
      "code.handler",
      "code.s3Bucket",
      "code.s3Key",
      "code.s3ObjectVersion",
      "code.script",
      "code.sourceLocationArn",
      "runConfig.activeTracing",
      "runConfig.environmentVariables",
      "runConfig.ephemeralStorage",
      "runConfig.memoryInMb",
      "runConfig.timeoutInSeconds",
      "schedule.durationInSeconds",
      "schedule.expression",
      "schedule.retryConfig",
      "vpcConfig.ipv6AllowedForDualStack",
      "vpcConfig.securityGroupIds",
      "vpcConfig.subnetIds",
      "vpcConfig.vpcId"
    ]
  },
  {
    "module": "aws-stepfunctions",
    "name": "CfnActivity",
    "missingProps": [
      "tags",
      "encryptionConfiguration.kmsDataKeyReusePeriodSeconds",
      "encryptionConfiguration.kmsKeyId",
      "encryptionConfiguration.type"
    ]
  },
  {
    "module": "aws-stepfunctions",
    "name": "CfnStateMachine",
    "missingProps": [
      "definition",
      "definitionS3Location",
      "definitionString",
      "tags",
      "encryptionConfiguration.kmsDataKeyReusePeriodSeconds",
      "encryptionConfiguration.kmsKeyId",
      "encryptionConfiguration.type",
      "loggingConfiguration.destinations",
      "loggingConfiguration.includeExecutionData",
      "loggingConfiguration.level",
      "tracingConfiguration.enabled"
    ]
  },
  {
    "module": "aws-sqs",
    "name": "CfnQueue",
    "missingProps": [
      "contentBasedDeduplication",
      "deduplicationScope",
      "fifoQueue",
      "fifoThroughputLimit",
      "kmsDataKeyReusePeriodSeconds",
      "kmsMasterKeyId",
      "sqsManagedSseEnabled",
      "tags"
    ]
  },
  {
    "module": "aws-sns",
    "name": "CfnSubscription",
    "missingProps": [
      "replayPolicy"
    ]
  },
  {
    "module": "aws-sns",
    "name": "CfnTopic",
    "missingProps": [
      "dataProtectionPolicy",
      "subscription",
      "tags",
      "deliveryStatusLogging.failureFeedbackRoleArn",
      "deliveryStatusLogging.protocol",
      "deliveryStatusLogging.successFeedbackRoleArn",
      "deliveryStatusLogging.successFeedbackSampleRate"
    ]
  },
  {
    "module": "aws-signer",
    "name": "CfnSigningProfile",
    "missingProps": [
      "tags",
      "signatureValidityPeriod.type",
      "signatureValidityPeriod.value"
    ]
  },
  {
    "module": "aws-ses",
    "name": "CfnConfigurationSet",
    "missingProps": [
      "tags",
      "deliveryOptions.maxDeliverySeconds",
      "deliveryOptions.sendingPoolName",
      "deliveryOptions.tlsPolicy",
      "reputationOptions.reputationMetricsEnabled",
      "sendingOptions.sendingEnabled",
      "suppressionOptions.suppressedReasons",
      "trackingOptions.customRedirectDomain",
      "trackingOptions.httpsPolicy",
      "vdmOptions.dashboardOptions",
      "vdmOptions.guardianOptions"
    ]
  },
  {
    "module": "aws-ses",
    "name": "CfnConfigurationSetEventDestination",
    "missingProps": [
      "eventDestination.cloudWatchDestination.dimensionConfigurations",
      "eventDestination.eventBridgeDestination.eventBusArn",
      "eventDestination.kinesisFirehoseDestination.deliveryStreamArn",
      "eventDestination.kinesisFirehoseDestination.iamRoleArn",
      "eventDestination.snsDestination.topicArn"
    ]
  },
  {
    "module": "aws-ses",
    "name": "CfnDedicatedIpPool",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-ses",
    "name": "CfnEmailIdentity",
    "missingProps": [
      "tags",
      "configurationSetAttributes.configurationSetName",
      "dkimAttributes.signingEnabled",
      "dkimSigningAttributes.domainSigningPrivateKey",
      "dkimSigningAttributes.domainSigningSelector",
      "dkimSigningAttributes.nextSigningKeyLength",
      "feedbackAttributes.emailForwardingEnabled",
      "mailFromAttributes.behaviorOnMxFailure",
      "mailFromAttributes.mailFromDomain"
    ]
  },
  {
    "module": "aws-ses",
    "name": "CfnReceiptRule",
    "missingProps": [
      "rule.conditions",
      "rule.unless",
      "rule.actions.addHeader",
      "rule.actions.archive",
      "rule.actions.deliverToMailbox",
      "rule.actions.deliverToQBusiness",
      "rule.actions.drop",
      "rule.actions.publishToSns",
      "rule.actions.relay",
      "rule.actions.replaceRecipient",
      "rule.actions.send",
      "rule.actions.writeToS3"
    ]
  },
  {
    "module": "aws-servicediscovery",
    "name": "CfnHttpNamespace",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-servicediscovery",
    "name": "CfnPrivateDnsNamespace",
    "missingProps": [
      "properties",
      "tags"
    ]
  },
  {
    "module": "aws-servicediscovery",
    "name": "CfnPublicDnsNamespace",
    "missingProps": [
      "properties",
      "tags"
    ]
  },
  {
    "module": "aws-servicediscovery",
    "name": "CfnService",
    "missingProps": [
      "serviceAttributes",
      "tags",
      "dnsConfig.dnsRecords",
      "dnsConfig.namespaceId",
      "dnsConfig.routingPolicy",
      "healthCheckConfig.failureThreshold",
      "healthCheckConfig.resourcePath",
      "healthCheckConfig.type",
      "healthCheckCustomConfig.failureThreshold"
    ]
  },
  {
    "module": "aws-servicecatalog",
    "name": "CfnCloudFormationProduct",
    "missingProps": [
      "productType",
      "sourceConnection",
      "tags",
      "provisioningArtifactParameters.description",
      "provisioningArtifactParameters.disableTemplateValidation",
      "provisioningArtifactParameters.info",
      "provisioningArtifactParameters.name",
      "provisioningArtifactParameters.type"
    ]
  },
  {
    "module": "aws-servicecatalog",
    "name": "CfnPortfolio",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-secretsmanager",
    "name": "CfnResourcePolicy",
    "missingProps": [
      "blockPublicPolicy"
    ]
  },
  {
    "module": "aws-secretsmanager",
    "name": "CfnRotationSchedule",
    "missingProps": [
      "hostedRotationLambda.excludeCharacters",
      "hostedRotationLambda.kmsKeyArn",
      "hostedRotationLambda.masterSecretArn",
      "hostedRotationLambda.masterSecretKmsKeyArn",
      "hostedRotationLambda.rotationLambdaName",
      "hostedRotationLambda.rotationType",
      "hostedRotationLambda.runtime",
      "hostedRotationLambda.superuserSecretArn",
      "hostedRotationLambda.superuserSecretKmsKeyArn",
      "hostedRotationLambda.vpcSecurityGroupIds",
      "hostedRotationLambda.vpcSubnetIds",
      "rotationRules.automaticallyAfterDays",
      "rotationRules.duration",
      "rotationRules.scheduleExpression"
    ]
  },
  {
    "module": "aws-scheduler",
    "name": "CfnSchedule",
    "missingProps": [
      "target.deadLetterConfig.arn",
      "target.ecsParameters.capacityProviderStrategy",
      "target.ecsParameters.enableEcsManagedTags",
      "target.ecsParameters.enableExecuteCommand",
      "target.ecsParameters.group",
      "target.ecsParameters.launchType",
      "target.ecsParameters.networkConfiguration",
      "target.ecsParameters.placementConstraints",
      "target.ecsParameters.placementStrategy",
      "target.ecsParameters.platformVersion",
      "target.ecsParameters.propagateTags",
      "target.ecsParameters.referenceId",
      "target.ecsParameters.tags",
      "target.ecsParameters.taskCount",
      "target.ecsParameters.taskDefinitionArn",
      "target.eventBridgeParameters.detailType",
      "target.eventBridgeParameters.source",
      "target.kinesisParameters.partitionKey",
      "target.retryPolicy.maximumEventAgeInSeconds",
      "target.retryPolicy.maximumRetryAttempts",
      "target.sageMakerPipelineParameters.pipelineParameterList",
      "target.sqsParameters.messageGroupId"
    ]
  },
  {
    "module": "aws-scheduler",
    "name": "CfnScheduleGroup",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-s3",
    "name": "CfnBucket",
    "missingProps": [
      "analyticsConfigurations",
      "metadataConfiguration",
      "metadataTableConfiguration",
      "notificationConfiguration",
      "tags",
      "accelerateConfiguration.accelerationStatus",
      "bucketEncryption.serverSideEncryptionConfiguration",
      "corsConfiguration.corsRules",
      "intelligentTieringConfigurations.id",
      "intelligentTieringConfigurations.prefix",
      "intelligentTieringConfigurations.status",
      "intelligentTieringConfigurations.tagFilters",
      "intelligentTieringConfigurations.tierings",
      "inventoryConfigurations.destination",
      "inventoryConfigurations.enabled",
      "inventoryConfigurations.id",
      "inventoryConfigurations.includedObjectVersions",
      "inventoryConfigurations.optionalFields",
      "inventoryConfigurations.prefix",
      "inventoryConfigurations.scheduleFrequency",
      "lifecycleConfiguration.rules",
      "lifecycleConfiguration.transitionDefaultMinimumObjectSize",
      "loggingConfiguration.destinationBucketName",
      "loggingConfiguration.logFilePrefix",
      "loggingConfiguration.targetObjectKeyFormat",
      "metricsConfigurations.accessPointArn",
      "metricsConfigurations.id",
      "metricsConfigurations.prefix",
      "metricsConfigurations.tagFilters",
      "objectLockConfiguration.objectLockEnabled",
      "objectLockConfiguration.rule",
      "ownershipControls.rules",
      "publicAccessBlockConfiguration.blockPublicAcls",
      "publicAccessBlockConfiguration.blockPublicPolicy",
      "publicAccessBlockConfiguration.ignorePublicAcls",
      "publicAccessBlockConfiguration.restrictPublicBuckets",
      "replicationConfiguration.role",
      "replicationConfiguration.rules",
      "versioningConfiguration.status",
      "websiteConfiguration.errorDocument",
      "websiteConfiguration.indexDocument",
      "websiteConfiguration.redirectAllRequestsTo",
      "websiteConfiguration.routingRules"
    ]
  },
  {
    "module": "aws-route53",
    "name": "CfnHealthCheck",
    "missingProps": [
      "healthCheckTags",
      "healthCheckConfig.alarmIdentifier.name",
      "healthCheckConfig.alarmIdentifier.region"
    ]
  },
  {
    "module": "aws-route53",
    "name": "CfnHostedZone",
    "missingProps": [
      "hostedZoneTags",
      "hostedZoneConfig.comment",
      "queryLoggingConfig.cloudWatchLogsLogGroupArn",
      "vpcs.vpcId",
      "vpcs.vpcRegion"
    ]
  },
  {
    "module": "aws-route53",
    "name": "CfnRecordSet",
    "missingProps": [
      "failover",
      "geoProximityLocation",
      "hostedZoneName",
      "aliasTarget.dnsName",
      "aliasTarget.evaluateTargetHealth",
      "aliasTarget.hostedZoneId",
      "cidrRoutingConfig.collectionId",
      "cidrRoutingConfig.locationName",
      "geoLocation.continentCode",
      "geoLocation.countryCode",
      "geoLocation.subdivisionCode"
    ]
  },
  {
    "module": "aws-rds",
    "name": "CfnDBCluster",
    "missingProps": [
      "allocatedStorage",
      "associatedRoles",
      "autoMinorVersionUpgrade",
      "availabilityZones",
      "backtrackWindow",
      "backupRetentionPeriod",
      "clusterScalabilityType",
      "copyTagsToSnapshot",
      "databaseInsightsMode",
      "databaseName",
      "dbClusterIdentifier",
      "dbClusterInstanceClass",
      "dbClusterParameterGroupName",
      "dbInstanceParameterGroupName",
      "dbSubnetGroupName",
      "dbSystemId",
      "deleteAutomatedBackups",
      "deletionProtection",
      "domain",
      "domainIamRoleName",
      "enableCloudwatchLogsExports",
      "enableGlobalWriteForwarding",
      "enableHttpEndpoint",
      "enableIamDatabaseAuthentication",
      "enableLocalWriteForwarding",
      "engine",
      "engineLifecycleSupport",
      "engineMode",
      "engineVersion",
      "globalClusterIdentifier",
      "iops",
      "manageMasterUserPassword",
      "masterUserAuthenticationType",
      "masterUserSecret",
      "monitoringInterval",
      "monitoringRoleArn",
      "networkType",
      "performanceInsightsEnabled",
      "performanceInsightsKmsKeyId",
      "performanceInsightsRetentionPeriod",
      "port",
      "preferredBackupWindow",
      "preferredMaintenanceWindow",
      "publiclyAccessible",
      "replicationSourceIdentifier",
      "restoreToTime",
      "restoreType",
      "scalingConfiguration",
      "serverlessV2ScalingConfiguration",
      "snapshotIdentifier",
      "sourceDbClusterIdentifier",
      "sourceDbClusterResourceId",
      "sourceRegion",
      "storageEncrypted",
      "storageType",
      "tags",
      "useLatestRestorableTime",
      "vpcSecurityGroupIds"
    ]
  },
  {
    "module": "aws-rds",
    "name": "CfnDBInstance",
    "missingProps": [
      "allocatedStorage",
      "allowMajorVersionUpgrade",
      "applyImmediately",
      "associatedRoles",
      "automaticBackupReplicationKmsKeyId",
      "automaticBackupReplicationRegion",
      "automaticBackupReplicationRetentionPeriod",
      "autoMinorVersionUpgrade",
      "availabilityZone",
      "backupRetentionPeriod",
      "backupTarget",
      "caCertificateIdentifier",
      "certificateRotationRestart",
      "copyTagsToSnapshot",
      "customIamInstanceProfile",
      "databaseInsightsMode",
      "dbClusterIdentifier",
      "dbClusterSnapshotIdentifier",
      "dbInstanceClass",
      "dbInstanceIdentifier",
      "dbName",
      "dbParameterGroupName",
      "dbSecurityGroups",
      "dbSnapshotIdentifier",
      "dbSubnetGroupName",
      "dbSystemId",
      "dedicatedLogVolume",
      "deleteAutomatedBackups",
      "deletionProtection",
      "domain",
      "domainAuthSecretArn",
      "domainDnsIps",
      "domainFqdn",
      "domainIamRoleName",
      "domainOu",
      "enableCloudwatchLogsExports",
      "enableIamDatabaseAuthentication",
      "enablePerformanceInsights",
      "engine",
      "engineLifecycleSupport",
      "engineVersion",
      "iops",
      "licenseModel",
      "manageMasterUserPassword",
      "masterUserAuthenticationType",
      "masterUserSecret",
      "maxAllocatedStorage",
      "monitoringInterval",
      "monitoringRoleArn",
      "multiAz",
      "ncharCharacterSetName",
      "networkType",
      "optionGroupName",
      "performanceInsightsKmsKeyId",
      "performanceInsightsRetentionPeriod",
      "port",
      "preferredBackupWindow",
      "preferredMaintenanceWindow",
      "processorFeatures",
      "promotionTier",
      "publiclyAccessible",
      "replicaMode",
      "restoreTime",
      "sourceDbClusterIdentifier",
      "sourceDbInstanceAutomatedBackupsArn",
      "sourceDbInstanceIdentifier",
      "sourceDbiResourceId",
      "sourceRegion",
      "storageThroughput",
      "storageType",
      "tags",
      "tdeCredentialArn",
      "tdeCredentialPassword",
      "timezone",
      "useDefaultProcessorFeatures",
      "useLatestRestorableTime",
      "vpcSecurityGroups"
    ]
  },
  {
    "module": "aws-rds",
    "name": "CfnDBProxy",
    "missingProps": [
      "defaultAuthScheme",
      "endpointNetworkType",
      "tags",
      "targetConnectionNetworkType",
      "auth.authScheme",
      "auth.clientPasswordAuthType",
      "auth.description",
      "auth.iamAuth",
      "auth.secretArn"
    ]
  },
  {
    "module": "aws-rds",
    "name": "CfnDBProxyEndpoint",
    "missingProps": [
      "endpointNetworkType",
      "tags"
    ]
  },
  {
    "module": "aws-rds",
    "name": "CfnOptionGroup",
    "missingProps": [
      "optionGroupName",
      "tags",
      "optionConfigurations.dbSecurityGroupMemberships",
      "optionConfigurations.optionName",
      "optionConfigurations.optionSettings",
      "optionConfigurations.optionVersion",
      "optionConfigurations.port",
      "optionConfigurations.vpcSecurityGroupMemberships"
    ]
  },
  {
    "module": "aws-opensearchservice",
    "name": "CfnDomain",
    "missingProps": [
      "accessPolicies",
      "domainArn",
      "identityCenterOptions",
      "skipShardMigrationWait",
      "tags",
      "advancedSecurityOptions.anonymousAuthDisableDate",
      "advancedSecurityOptions.anonymousAuthEnabled",
      "advancedSecurityOptions.enabled",
      "advancedSecurityOptions.iamFederationOptions",
      "advancedSecurityOptions.internalUserDatabaseEnabled",
      "advancedSecurityOptions.jwtOptions",
      "advancedSecurityOptions.masterUserOptions",
      "advancedSecurityOptions.samlOptions",
      "clusterConfig.coldStorageOptions.enabled",
      "clusterConfig.nodeOptions.nodeConfig",
      "clusterConfig.nodeOptions.nodeType",
      "clusterConfig.zoneAwarenessConfig.availabilityZoneCount",
      "cognitoOptions.enabled",
      "cognitoOptions.identityPoolId",
      "cognitoOptions.roleArn",
      "cognitoOptions.userPoolId",
      "domainEndpointOptions.customEndpoint",
      "domainEndpointOptions.customEndpointCertificateArn",
      "domainEndpointOptions.customEndpointEnabled",
      "logPublishingOptions.cloudWatchLogsLogGroupArn",
      "logPublishingOptions.enabled",
      "offPeakWindowOptions.enabled",
      "offPeakWindowOptions.offPeakWindow",
      "snapshotOptions.automatedSnapshotStartHour",
      "softwareUpdateOptions.autoSoftwareUpdateEnabled",
      "vpcOptions.securityGroupIds",
      "vpcOptions.subnetIds"
    ]
  },
  {
    "module": "aws-logs",
    "name": "CfnDestination",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-logs",
    "name": "CfnLogGroup",
    "missingProps": [
      "fieldIndexPolicies",
      "resourcePolicyDocument",
      "tags"
    ]
  },
  {
    "module": "aws-logs",
    "name": "CfnMetricFilter",
    "missingProps": [
      "metricTransformations.defaultValue",
      "metricTransformations.dimensions",
      "metricTransformations.metricName",
      "metricTransformations.metricNamespace",
      "metricTransformations.metricValue",
      "metricTransformations.unit"
    ]
  },
  {
    "module": "aws-logs",
    "name": "CfnQueryDefinition",
    "missingProps": [
      "queryLanguage"
    ]
  },
  {
    "module": "aws-logs",
    "name": "CfnSubscriptionFilter",
    "missingProps": [
      "applyOnTransformedLogs"
    ]
  },
  {
    "module": "aws-lambda",
    "name": "CfnAlias",
    "missingProps": [
      "provisionedConcurrencyConfig.provisionedConcurrentExecutions",
      "routingConfig.additionalVersionWeights"
    ]
  },
  {
    "module": "aws-lambda",
    "name": "CfnCodeSigningConfig",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-lambda",
    "name": "CfnEventInvokeConfig",
    "missingProps": [
      "destinationConfig.onFailure"
    ]
  },
  {
    "module": "aws-lambda",
    "name": "CfnEventSourceMapping",
    "missingProps": [
      "documentDbEventSourceConfig",
      "queues",
      "tags",
      "amazonManagedKafkaEventSourceConfig.consumerGroupId",
      "amazonManagedKafkaEventSourceConfig.schemaRegistryConfig",
      "destinationConfig.onFailure",
      "filterCriteria.filters",
      "metricsConfig.metrics",
      "provisionedPollerConfig.maximumPollers",
      "provisionedPollerConfig.minimumPollers",
      "scalingConfig.maximumConcurrency",
      "selfManagedEventSource.endpoints",
      "selfManagedKafkaEventSourceConfig.consumerGroupId",
      "selfManagedKafkaEventSourceConfig.schemaRegistryConfig",
      "sourceAccessConfigurations.type",
      "sourceAccessConfigurations.uri"
    ]
  },
  {
    "module": "aws-lambda",
    "name": "CfnFunction",
    "missingProps": [
      "tags",
      "tracingConfig",
      "deadLetterConfig.targetArn",
      "environment.variables",
      "ephemeralStorage.size",
      "fileSystemConfigs.arn",
      "fileSystemConfigs.localMountPath",
      "imageConfig.command",
      "imageConfig.entryPoint",
      "imageConfig.workingDirectory",
      "loggingConfig.applicationLogLevel",
      "loggingConfig.logFormat",
      "loggingConfig.logGroup",
      "loggingConfig.systemLogLevel",
      "runtimeManagementConfig.runtimeVersionArn",
      "runtimeManagementConfig.updateRuntimeOn",
      "snapStart.applyOn",
      "vpcConfig.ipv6AllowedForDualStack",
      "vpcConfig.securityGroupIds",
      "vpcConfig.subnetIds"
    ]
  },
  {
    "module": "aws-lambda",
    "name": "CfnUrl",
    "missingProps": [
      "cors.allowCredentials",
      "cors.allowHeaders",
      "cors.allowMethods",
      "cors.allowOrigins",
      "cors.exposeHeaders",
      "cors.maxAge"
    ]
  },
  {
    "module": "aws-lambda",
    "name": "CfnVersion",
    "missingProps": [
      "runtimePolicy",
      "provisionedConcurrencyConfig.provisionedConcurrentExecutions"
    ]
  },
  {
    "module": "aws-kms",
    "name": "CfnKey",
    "missingProps": [
      "bypassPolicyLockoutSafetyCheck",
      "origin",
      "tags"
    ]
  },
  {
    "module": "aws-kinesisfirehose",
    "name": "CfnDeliveryStream",
    "missingProps": [
      "amazonOpenSearchServerlessDestinationConfiguration",
      "amazonopensearchserviceDestinationConfiguration",
      "databaseSourceConfiguration",
      "directPutSourceConfiguration",
      "elasticsearchDestinationConfiguration",
      "extendedS3DestinationConfiguration",
      "httpEndpointDestinationConfiguration",
      "icebergDestinationConfiguration",
      "kinesisStreamSourceConfiguration",
      "mskSourceConfiguration",
      "redshiftDestinationConfiguration",
      "s3DestinationConfiguration",
      "snowflakeDestinationConfiguration",
      "splunkDestinationConfiguration",
      "tags",
      "deliveryStreamEncryptionConfigurationInput.keyArn",
      "deliveryStreamEncryptionConfigurationInput.keyType"
    ]
  },
  {
    "module": "aws-kinesis",
    "name": "CfnStream",
    "missingProps": [
      "streamModeDetails",
      "tags",
      "streamEncryption.encryptionType",
      "streamEncryption.keyId"
    ]
  },
  {
    "module": "aws-kinesis",
    "name": "CfnStreamConsumer",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-iam",
    "name": "CfnGroup",
    "missingProps": [
      "policies"
    ]
  },
  {
    "module": "aws-iam",
    "name": "CfnOIDCProvider",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-iam",
    "name": "CfnRole",
    "missingProps": [
      "tags",
      "policies.policyDocument",
      "policies.policyName"
    ]
  },
  {
    "module": "aws-iam",
    "name": "CfnSAMLProvider",
    "missingProps": [
      "addPrivateKey",
      "assertionEncryptionMode",
      "privateKeyList",
      "removePrivateKey",
      "tags"
    ]
  },
  {
    "module": "aws-iam",
    "name": "CfnUser",
    "missingProps": [
      "policies",
      "tags",
      "loginProfile.password",
      "loginProfile.passwordResetRequired"
    ]
  },
  {
    "module": "aws-fsx",
    "name": "CfnFileSystem",
    "missingProps": [
      "networkType",
      "ontapConfiguration",
      "openZfsConfiguration",
      "tags",
      "windowsConfiguration",
      "lustreConfiguration.autoImportPolicy",
      "lustreConfiguration.automaticBackupRetentionDays",
      "lustreConfiguration.copyTagsToBackups",
      "lustreConfiguration.dailyAutomaticBackupStartTime",
      "lustreConfiguration.dataCompressionType",
      "lustreConfiguration.dataReadCacheConfiguration",
      "lustreConfiguration.deploymentType",
      "lustreConfiguration.driveCacheType",
      "lustreConfiguration.efaEnabled",
      "lustreConfiguration.exportPath",
      "lustreConfiguration.importedFileChunkSize",
      "lustreConfiguration.importPath",
      "lustreConfiguration.metadataConfiguration",
      "lustreConfiguration.perUnitStorageThroughput",
      "lustreConfiguration.throughputCapacity",
      "lustreConfiguration.weeklyMaintenanceStartTime"
    ]
  },
  {
    "module": "aws-events",
    "name": "CfnEventBus",
    "missingProps": [
      "policy",
      "tags",
      "deadLetterConfig.arn",
      "logConfig.includeDetail",
      "logConfig.level"
    ]
  },
  {
    "module": "aws-events",
    "name": "CfnEventBusPolicy",
    "missingProps": [
      "action",
      "condition",
      "principal"
    ]
  },
  {
    "module": "aws-events",
    "name": "CfnRule",
    "missingProps": [
      "tags",
      "targets.appSyncParameters",
      "targets.arn",
      "targets.batchParameters",
      "targets.deadLetterConfig",
      "targets.ecsParameters",
      "targets.httpParameters",
      "targets.id",
      "targets.input",
      "targets.inputPath",
      "targets.inputTransformer",
      "targets.kinesisParameters",
      "targets.redshiftDataParameters",
      "targets.retryPolicy",
      "targets.roleArn",
      "targets.runCommandParameters",
      "targets.sageMakerPipelineParameters",
      "targets.sqsParameters"
    ]
  },
  {
    "module": "aws-elasticsearch",
    "name": "CfnDomain",
    "missingProps": [
      "accessPolicies",
      "domainArn",
      "tags",
      "advancedSecurityOptions.anonymousAuthEnabled",
      "advancedSecurityOptions.enabled",
      "advancedSecurityOptions.internalUserDatabaseEnabled",
      "advancedSecurityOptions.masterUserOptions",
      "domainEndpointOptions.customEndpoint",
      "domainEndpointOptions.customEndpointCertificateArn",
      "domainEndpointOptions.customEndpointEnabled",
      "elasticsearchClusterConfig.coldStorageOptions",
      "elasticsearchClusterConfig.zoneAwarenessConfig.availabilityZoneCount",
      "logPublishingOptions.cloudWatchLogsLogGroupArn",
      "logPublishingOptions.enabled",
      "snapshotOptions.automatedSnapshotStartHour",
      "vpcOptions.securityGroupIds",
      "vpcOptions.subnetIds"
    ]
  },
  {
    "module": "aws-elasticloadbalancingv2",
    "name": "CfnListener",
    "missingProps": [
      "alpnPolicy",
      "certificates",
      "loadBalancerArn",
      "mutualAuthentication",
      "port",
      "protocol",
      "sslPolicy",
      "defaultActions.authenticateCognitoConfig",
      "defaultActions.authenticateOidcConfig",
      "defaultActions.fixedResponseConfig",
      "defaultActions.forwardConfig",
      "defaultActions.order",
      "defaultActions.redirectConfig",
      "defaultActions.targetGroupArn",
      "defaultActions.type",
      "listenerAttributes.key",
      "listenerAttributes.value"
    ]
  },
  {
    "module": "aws-elasticloadbalancingv2",
    "name": "CfnListenerCertificate",
    "missingProps": [
      "certificates.certificateArn"
    ]
  },
  {
    "module": "aws-elasticloadbalancingv2",
    "name": "CfnListenerRule",
    "missingProps": [
      "actions.authenticateCognitoConfig",
      "actions.authenticateOidcConfig",
      "actions.fixedResponseConfig",
      "actions.forwardConfig",
      "actions.order",
      "actions.redirectConfig",
      "actions.targetGroupArn",
      "actions.type",
      "conditions.field",
      "conditions.hostHeaderConfig",
      "conditions.httpHeaderConfig",
      "conditions.httpRequestMethodConfig",
      "conditions.pathPatternConfig",
      "conditions.queryStringConfig",
      "conditions.sourceIpConfig",
      "conditions.values"
    ]
  },
  {
    "module": "aws-elasticloadbalancingv2",
    "name": "CfnLoadBalancer",
    "missingProps": [
      "enableCapacityReservationProvisionStabilize",
      "enablePrefixForIpv6SourceNat",
      "enforceSecurityGroupInboundRulesOnPrivateLinkTraffic",
      "ipAddressType",
      "ipv4IpamPoolId",
      "securityGroups",
      "tags",
      "type",
      "loadBalancerAttributes.key",
      "loadBalancerAttributes.value",
      "minimumLoadBalancerCapacity.capacityUnits",
      "subnetMappings.allocationId",
      "subnetMappings.iPv6Address",
      "subnetMappings.privateIPv4Address",
      "subnetMappings.sourceNatIpv6Prefix",
      "subnetMappings.subnetId"
    ]
  },
  {
    "module": "aws-elasticloadbalancingv2",
    "name": "CfnTargetGroup",
    "missingProps": [
      "port",
      "protocol",
      "protocolVersion",
      "tags",
      "matcher.grpcCode",
      "matcher.httpCode",
      "targetGroupAttributes.key",
      "targetGroupAttributes.value",
      "targets.availabilityZone",
      "targets.id",
      "targets.port"
    ]
  },
  {
    "module": "aws-elasticloadbalancingv2",
    "name": "CfnTrustStore",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-elasticloadbalancingv2",
    "name": "CfnTrustStoreRevocation",
    "missingProps": [
      "revocationContents.revocationType",
      "revocationContents.s3Bucket",
      "revocationContents.s3Key",
      "revocationContents.s3ObjectVersion"
    ]
  },
  {
    "module": "aws-elasticloadbalancing",
    "name": "CfnLoadBalancer",
    "missingProps": [
      "accessLoggingPolicy",
      "appCookieStickinessPolicy",
      "availabilityZones",
      "connectionDrainingPolicy",
      "connectionSettings",
      "lbCookieStickinessPolicy",
      "loadBalancerName",
      "policies",
      "tags",
      "healthCheck.healthyThreshold",
      "healthCheck.interval",
      "healthCheck.target",
      "healthCheck.timeout",
      "healthCheck.unhealthyThreshold",
      "listeners.instancePort",
      "listeners.instanceProtocol",
      "listeners.loadBalancerPort",
      "listeners.policyNames",
      "listeners.protocol",
      "listeners.sslCertificateId"
    ]
  },
  {
    "module": "aws-eks",
    "name": "CfnAccessEntry",
    "missingProps": [
      "kubernetesGroups",
      "tags",
      "username",
      "accessPolicies.accessScope",
      "accessPolicies.policyArn"
    ]
  },
  {
    "module": "aws-eks",
    "name": "CfnAddon",
    "missingProps": [
      "namespaceConfig",
      "podIdentityAssociations",
      "resolveConflicts",
      "serviceAccountRoleArn",
      "tags"
    ]
  },
  {
    "module": "aws-eks",
    "name": "CfnNodegroup",
    "missingProps": [
      "version",
      "launchTemplate.id",
      "launchTemplate.name",
      "launchTemplate.version",
      "nodeRepairConfig.enabled",
      "remoteAccess.ec2SshKey",
      "remoteAccess.sourceSecurityGroups",
      "taints.effect",
      "taints.key",
      "taints.value",
      "updateConfig.maxUnavailable",
      "updateConfig.maxUnavailablePercentage",
      "updateConfig.updateStrategy"
    ]
  },
  {
    "module": "aws-efs",
    "name": "CfnAccessPoint",
    "missingProps": [
      "accessPointTags",
      "posixUser.gid",
      "posixUser.secondaryGids",
      "posixUser.uid",
      "rootDirectory.creationInfo.ownerGid",
      "rootDirectory.creationInfo.ownerUid",
      "rootDirectory.creationInfo.permissions"
    ]
  },
  {
    "module": "aws-efs",
    "name": "CfnFileSystem",
    "missingProps": [
      "bypassPolicyLockoutSafetyCheck",
      "fileSystemTags",
      "backupPolicy.status",
      "fileSystemProtection.replicationOverwriteProtection",
      "lifecyclePolicies.transitionToArchive",
      "lifecyclePolicies.transitionToIa",
      "lifecyclePolicies.transitionToPrimaryStorageClass",
      "replicationConfiguration.destinations"
    ]
  },
  {
    "module": "aws-ecs",
    "name": "CfnCluster",
    "missingProps": [
      "capacityProviders",
      "defaultCapacityProviderStrategy",
      "serviceConnectDefaults",
      "tags",
      "clusterSettings.name",
      "clusterSettings.value",
      "configuration.executeCommandConfiguration",
      "configuration.managedStorageConfiguration"
    ]
  },
  {
    "module": "aws-ecr",
    "name": "CfnRepository",
    "missingProps": [
      "imageTagMutabilityExclusionFilters",
      "tags",
      "encryptionConfiguration.encryptionType",
      "encryptionConfiguration.kmsKey",
      "imageScanningConfiguration.scanOnPush",
      "lifecyclePolicy.lifecyclePolicyText",
      "lifecyclePolicy.registryId"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnClientVpnEndpoint",
    "missingProps": [
      "tagSpecifications",
      "authenticationOptions.activeDirectory",
      "authenticationOptions.federatedAuthentication",
      "authenticationOptions.mutualAuthentication",
      "authenticationOptions.type",
      "clientConnectOptions.enabled",
      "clientConnectOptions.lambdaFunctionArn",
      "clientLoginBannerOptions.bannerText",
      "clientLoginBannerOptions.enabled",
      "clientRouteEnforcementOptions.enforced"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnInstance",
    "missingProps": [
      "additionalInfo",
      "affinity",
      "cpuOptions",
      "elasticGpuSpecifications",
      "elasticInferenceAccelerators",
      "hostId",
      "hostResourceGroupArn",
      "ipv6Addresses",
      "kernelId",
      "launchTemplate",
      "licenseSpecifications",
      "metadataOptions",
      "privateDnsNameOptions",
      "ramdiskId",
      "securityGroups",
      "ssmAssociations",
      "tags",
      "tenancy",
      "volumes",
      "blockDeviceMappings.deviceName",
      "blockDeviceMappings.ebs",
      "blockDeviceMappings.noDevice",
      "blockDeviceMappings.virtualName",
      "creditSpecification.cpuCredits",
      "enclaveOptions.enabled",
      "hibernationOptions.configured",
      "networkInterfaces.associateCarrierIpAddress",
      "networkInterfaces.associatePublicIpAddress",
      "networkInterfaces.connectionTrackingSpecification",
      "networkInterfaces.deleteOnTermination",
      "networkInterfaces.description",
      "networkInterfaces.deviceIndex",
      "networkInterfaces.enaQueueCount",
      "networkInterfaces.enaSrdSpecification",
      "networkInterfaces.groups",
      "networkInterfaces.interfaceType",
      "networkInterfaces.ipv4PrefixCount",
      "networkInterfaces.ipv4Prefixes",
      "networkInterfaces.ipv6AddressCount",
      "networkInterfaces.ipv6Addresses",
      "networkInterfaces.ipv6PrefixCount",
      "networkInterfaces.ipv6Prefixes",
      "networkInterfaces.networkCardIndex",
      "networkInterfaces.networkInterfaceId",
      "networkInterfaces.primaryIpv6",
      "networkInterfaces.privateIpAddress",
      "networkInterfaces.privateIpAddresses",
      "networkInterfaces.secondaryPrivateIpAddressCount",
      "networkInterfaces.subnetId"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnKeyPair",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnLaunchTemplate",
    "missingProps": [
      "launchTemplateData.capacityReservationSpecification",
      "launchTemplateData.cpuOptions",
      "launchTemplateData.disableApiStop",
      "launchTemplateData.elasticGpuSpecifications",
      "launchTemplateData.elasticInferenceAccelerators",
      "launchTemplateData.instanceRequirements",
      "launchTemplateData.kernelId",
      "launchTemplateData.licenseSpecifications",
      "launchTemplateData.maintenanceOptions",
      "launchTemplateData.networkPerformanceOptions",
      "launchTemplateData.privateDnsNameOptions",
      "launchTemplateData.ramDiskId",
      "launchTemplateData.securityGroups",
      "launchTemplateData.blockDeviceMappings.deviceName",
      "launchTemplateData.blockDeviceMappings.ebs",
      "launchTemplateData.blockDeviceMappings.noDevice",
      "launchTemplateData.blockDeviceMappings.virtualName",
      "launchTemplateData.creditSpecification.cpuCredits",
      "launchTemplateData.enclaveOptions.enabled",
      "launchTemplateData.hibernationOptions.configured",
      "launchTemplateData.iamInstanceProfile.arn",
      "launchTemplateData.iamInstanceProfile.name",
      "launchTemplateData.instanceMarketOptions.marketType",
      "launchTemplateData.instanceMarketOptions.spotOptions",
      "launchTemplateData.metadataOptions.httpEndpoint",
      "launchTemplateData.metadataOptions.httpProtocolIpv6",
      "launchTemplateData.metadataOptions.httpPutResponseHopLimit",
      "launchTemplateData.metadataOptions.httpTokens",
      "launchTemplateData.metadataOptions.instanceMetadataTags",
      "launchTemplateData.monitoring.enabled",
      "launchTemplateData.networkInterfaces.associateCarrierIpAddress",
      "launchTemplateData.networkInterfaces.associatePublicIpAddress",
      "launchTemplateData.networkInterfaces.connectionTrackingSpecification",
      "launchTemplateData.networkInterfaces.deleteOnTermination",
      "launchTemplateData.networkInterfaces.description",
      "launchTemplateData.networkInterfaces.deviceIndex",
      "launchTemplateData.networkInterfaces.enaQueueCount",
      "launchTemplateData.networkInterfaces.enaSrdSpecification",
      "launchTemplateData.networkInterfaces.groups",
      "launchTemplateData.networkInterfaces.interfaceType",
      "launchTemplateData.networkInterfaces.ipv4PrefixCount",
      "launchTemplateData.networkInterfaces.ipv4Prefixes",
      "launchTemplateData.networkInterfaces.ipv6AddressCount",
      "launchTemplateData.networkInterfaces.ipv6Addresses",
      "launchTemplateData.networkInterfaces.ipv6PrefixCount",
      "launchTemplateData.networkInterfaces.ipv6Prefixes",
      "launchTemplateData.networkInterfaces.networkCardIndex",
      "launchTemplateData.networkInterfaces.networkInterfaceId",
      "launchTemplateData.networkInterfaces.primaryIpv6",
      "launchTemplateData.networkInterfaces.privateIpAddress",
      "launchTemplateData.networkInterfaces.privateIpAddresses",
      "launchTemplateData.networkInterfaces.secondaryPrivateIpAddressCount",
      "launchTemplateData.networkInterfaces.subnetId",
      "launchTemplateData.placement.affinity",
      "launchTemplateData.placement.availabilityZone",
      "launchTemplateData.placement.groupId",
      "launchTemplateData.placement.groupName",
      "launchTemplateData.placement.hostId",
      "launchTemplateData.placement.hostResourceGroupArn",
      "launchTemplateData.placement.partitionNumber",
      "launchTemplateData.placement.spreadDomain",
      "launchTemplateData.placement.tenancy",
      "launchTemplateData.tagSpecifications.resourceType",
      "launchTemplateData.tagSpecifications.tags",
      "tagSpecifications.resourceType",
      "tagSpecifications.tags"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnNetworkAcl",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnNetworkAclEntry",
    "missingProps": [
      "cidrBlock",
      "icmp",
      "ipv6CidrBlock",
      "portRange",
      "protocol"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnPlacementGroup",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnPrefixList",
    "missingProps": [
      "tags",
      "entries.cidr",
      "entries.description"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnSecurityGroup",
    "missingProps": [
      "tags",
      "securityGroupEgress.cidrIp",
      "securityGroupEgress.cidrIpv6",
      "securityGroupEgress.description",
      "securityGroupEgress.destinationPrefixListId",
      "securityGroupEgress.destinationSecurityGroupId",
      "securityGroupEgress.fromPort",
      "securityGroupEgress.ipProtocol",
      "securityGroupEgress.toPort",
      "securityGroupIngress.cidrIp",
      "securityGroupIngress.cidrIpv6",
      "securityGroupIngress.description",
      "securityGroupIngress.fromPort",
      "securityGroupIngress.ipProtocol",
      "securityGroupIngress.sourcePrefixListId",
      "securityGroupIngress.sourceSecurityGroupId",
      "securityGroupIngress.sourceSecurityGroupName",
      "securityGroupIngress.sourceSecurityGroupOwnerId",
      "securityGroupIngress.toPort"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnVolume",
    "missingProps": [
      "outpostArn",
      "tags"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnVPC",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnVPCEndpoint",
    "missingProps": [
      "dnsOptions",
      "ipAddressType",
      "privateDnsEnabled",
      "resourceConfigurationArn",
      "securityGroupIds",
      "serviceNetworkArn",
      "serviceRegion",
      "subnetIds",
      "tags"
    ]
  },
  {
    "module": "aws-ec2",
    "name": "CfnVPNConnection",
    "missingProps": [
      "enableAcceleration",
      "localIpv4NetworkCidr",
      "localIpv6NetworkCidr",
      "outsideIpAddressType",
      "preSharedKeyStorage",
      "remoteIpv4NetworkCidr",
      "remoteIpv6NetworkCidr",
      "tags",
      "transitGatewayId",
      "transportTransitGatewayAttachmentId",
      "tunnelInsideIpVersion",
      "vpnTunnelOptionsSpecifications.dpdTimeoutAction",
      "vpnTunnelOptionsSpecifications.dpdTimeoutSeconds",
      "vpnTunnelOptionsSpecifications.enableTunnelLifecycleControl",
      "vpnTunnelOptionsSpecifications.ikeVersions",
      "vpnTunnelOptionsSpecifications.logOptions",
      "vpnTunnelOptionsSpecifications.phase1DhGroupNumbers",
      "vpnTunnelOptionsSpecifications.phase1EncryptionAlgorithms",
      "vpnTunnelOptionsSpecifications.phase1IntegrityAlgorithms",
      "vpnTunnelOptionsSpecifications.phase1LifetimeSeconds",
      "vpnTunnelOptionsSpecifications.phase2DhGroupNumbers",
      "vpnTunnelOptionsSpecifications.phase2EncryptionAlgorithms",
      "vpnTunnelOptionsSpecifications.phase2IntegrityAlgorithms",
      "vpnTunnelOptionsSpecifications.phase2LifetimeSeconds",
      "vpnTunnelOptionsSpecifications.preSharedKey",
      "vpnTunnelOptionsSpecifications.rekeyFuzzPercentage",
      "vpnTunnelOptionsSpecifications.rekeyMarginTimeSeconds",
      "vpnTunnelOptionsSpecifications.replayWindowSize",
      "vpnTunnelOptionsSpecifications.startupAction",
      "vpnTunnelOptionsSpecifications.tunnelInsideCidr",
      "vpnTunnelOptionsSpecifications.tunnelInsideIpv6Cidr"
    ]
  },
  {
    "module": "aws-dynamodb",
    "name": "CfnGlobalTable",
    "missingProps": [
      "globalTableSettingsReplicationMode",
      "globalTableSourceArn",
      "attributeDefinitions.attributeName",
      "attributeDefinitions.attributeType",
      "globalSecondaryIndexes.contributorInsightsSpecification",
      "globalSecondaryIndexes.indexName",
      "globalSecondaryIndexes.keySchema",
      "globalSecondaryIndexes.onDemandThroughput",
      "globalSecondaryIndexes.projection",
      "globalSecondaryIndexes.provisionedThroughput",
      "globalSecondaryIndexes.warmThroughput",
      "globalTableWitnesses.region",
      "keySchema.attributeName",
      "keySchema.keyType",
      "localSecondaryIndexes.indexName",
      "localSecondaryIndexes.keySchema",
      "localSecondaryIndexes.projection",
      "replicas.contributorInsightsSpecification",
      "replicas.deletionProtectionEnabled",
      "replicas.globalSecondaryIndexes",
      "replicas.kinesisStreamSpecification",
      "replicas.pointInTimeRecoverySpecification",
      "replicas.readOnDemandThroughputSettings",
      "replicas.readProvisionedThroughputSettings",
      "replicas.region",
      "replicas.replicaStreamSpecification",
      "replicas.resourcePolicy",
      "replicas.sseSpecification",
      "replicas.tableClass",
      "replicas.tags",
      "sseSpecification.kmsMasterKeyId",
      "sseSpecification.sseEnabled",
      "sseSpecification.sseType",
      "streamSpecification.resourcePolicy",
      "streamSpecification.streamViewType",
      "timeToLiveSpecification.attributeName",
      "timeToLiveSpecification.enabled",
      "warmThroughput.readUnitsPerSecond",
      "warmThroughput.writeUnitsPerSecond",
      "writeOnDemandThroughputSettings.maxWriteRequestUnits",
      "writeProvisionedThroughputSettings.writeCapacityAutoScalingSettings"
    ]
  },
  {
    "module": "aws-dynamodb",
    "name": "CfnTable",
    "missingProps": [
      "globalTableSettingsReplicationMode",
      "onDemandThroughput",
      "tags",
      "attributeDefinitions.attributeName",
      "attributeDefinitions.attributeType",
      "contributorInsightsSpecification.enabled",
      "contributorInsightsSpecification.mode",
      "globalSecondaryIndexes.contributorInsightsSpecification",
      "globalSecondaryIndexes.indexName",
      "globalSecondaryIndexes.keySchema",
      "globalSecondaryIndexes.onDemandThroughput",
      "globalSecondaryIndexes.projection",
      "globalSecondaryIndexes.provisionedThroughput",
      "globalSecondaryIndexes.warmThroughput",
      "importSourceSpecification.inputCompressionType",
      "importSourceSpecification.inputFormat",
      "importSourceSpecification.inputFormatOptions",
      "importSourceSpecification.s3BucketSource",
      "keySchema.attributeName",
      "keySchema.keyType",
      "kinesisStreamSpecification.approximateCreationDateTimePrecision",
      "kinesisStreamSpecification.streamArn",
      "localSecondaryIndexes.indexName",
      "localSecondaryIndexes.keySchema",
      "localSecondaryIndexes.projection",
      "pointInTimeRecoverySpecification.pointInTimeRecoveryEnabled",
      "pointInTimeRecoverySpecification.recoveryPeriodInDays",
      "provisionedThroughput.readCapacityUnits",
      "provisionedThroughput.writeCapacityUnits",
      "resourcePolicy.policyDocument",
      "sseSpecification.kmsMasterKeyId",
      "sseSpecification.sseEnabled",
      "sseSpecification.sseType",
      "streamSpecification.resourcePolicy",
      "streamSpecification.streamViewType",
      "timeToLiveSpecification.attributeName",
      "timeToLiveSpecification.enabled",
      "warmThroughput.readUnitsPerSecond",
      "warmThroughput.writeUnitsPerSecond"
    ]
  },
  {
    "module": "aws-docdb",
    "name": "CfnDBCluster",
    "missingProps": [
      "availabilityZones",
      "globalClusterIdentifier",
      "manageMasterUserPassword",
      "masterUserSecretKmsKeyId",
      "networkType",
      "restoreToTime",
      "restoreType",
      "rotateMasterUserPassword",
      "snapshotIdentifier",
      "sourceDbClusterIdentifier",
      "tags",
      "useLatestRestorableTime",
      "serverlessV2ScalingConfiguration.maxCapacity",
      "serverlessV2ScalingConfiguration.minCapacity"
    ]
  },
  {
    "module": "aws-docdb",
    "name": "CfnDBClusterParameterGroup",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-docdb",
    "name": "CfnDBInstance",
    "missingProps": [
      "certificateRotationRestart",
      "tags"
    ]
  },
  {
    "module": "aws-config",
    "name": "CfnConfigRule",
    "missingProps": [
      "compliance",
      "evaluationModes.mode",
      "scope.complianceResourceId",
      "scope.complianceResourceTypes",
      "scope.tagKey",
      "scope.tagValue",
      "source.customPolicyDetails",
      "source.sourceDetails"
    ]
  },
  {
    "module": "aws-cognito",
    "name": "CfnUserPool",
    "missingProps": [
      "emailAuthenticationMessage",
      "emailAuthenticationSubject",
      "userPoolTags",
      "accountRecoverySetting.recoveryMechanisms",
      "adminCreateUserConfig.allowAdminCreateUserOnly",
      "adminCreateUserConfig.inviteMessageTemplate",
      "adminCreateUserConfig.unusedAccountValidityDays",
      "deviceConfiguration.challengeRequiredOnNewDevice",
      "deviceConfiguration.deviceOnlyRememberedOnUserPrompt",
      "emailConfiguration.configurationSet",
      "emailConfiguration.emailSendingAccount",
      "emailConfiguration.from",
      "emailConfiguration.replyToEmailAddress",
      "emailConfiguration.sourceArn",
      "lambdaConfig.createAuthChallenge",
      "lambdaConfig.customEmailSender",
      "lambdaConfig.customMessage",
      "lambdaConfig.customSmsSender",
      "lambdaConfig.defineAuthChallenge",
      "lambdaConfig.kmsKeyId",
      "lambdaConfig.postAuthentication",
      "lambdaConfig.postConfirmation",
      "lambdaConfig.preAuthentication",
      "lambdaConfig.preSignUp",
      "lambdaConfig.preTokenGeneration",
      "lambdaConfig.preTokenGenerationConfig",
      "lambdaConfig.userMigration",
      "lambdaConfig.verifyAuthChallengeResponse",
      "policies.passwordPolicy",
      "policies.signInPolicy",
      "schema.attributeDataType",
      "schema.developerOnlyAttribute",
      "schema.mutable",
      "schema.name",
      "schema.numberAttributeConstraints",
      "schema.required",
      "schema.stringAttributeConstraints",
      "smsConfiguration.externalId",
      "smsConfiguration.snsCallerArn",
      "smsConfiguration.snsRegion",
      "userAttributeUpdateSettings.attributesRequireVerificationBeforeUpdate",
      "usernameConfiguration.caseSensitive",
      "userPoolAddOns.advancedSecurityAdditionalFlows",
      "userPoolAddOns.advancedSecurityMode",
      "verificationMessageTemplate.defaultEmailOption",
      "verificationMessageTemplate.emailMessage",
      "verificationMessageTemplate.emailMessageByLink",
      "verificationMessageTemplate.emailSubject",
      "verificationMessageTemplate.emailSubjectByLink",
      "verificationMessageTemplate.smsMessage"
    ]
  },
  {
    "module": "aws-cognito",
    "name": "CfnUserPoolClient",
    "missingProps": [
      "accessTokenValidity",
      "authSessionValidity",
      "idTokenValidity",
      "refreshTokenRotation",
      "refreshTokenValidity",
      "tokenValidityUnits",
      "analyticsConfiguration.applicationArn",
      "analyticsConfiguration.applicationId",
      "analyticsConfiguration.externalId",
      "analyticsConfiguration.roleArn",
      "analyticsConfiguration.userDataShared"
    ]
  },
  {
    "module": "aws-cognito",
    "name": "CfnUserPoolDomain",
    "missingProps": [
      "customDomainConfig.certificateArn"
    ]
  },
  {
    "module": "aws-cognito",
    "name": "CfnUserPoolResourceServer",
    "missingProps": [
      "scopes.scopeDescription",
      "scopes.scopeName"
    ]
  },
  {
    "module": "aws-codestarnotifications",
    "name": "CfnNotificationRule",
    "missingProps": [
      "eventTypeId",
      "tags",
      "targetAddress",
      "targets.targetAddress",
      "targets.targetType"
    ]
  },
  {
    "module": "aws-codepipeline",
    "name": "CfnCustomActionType",
    "missingProps": [
      "tags",
      "configurationProperties.description",
      "configurationProperties.key",
      "configurationProperties.name",
      "configurationProperties.queryable",
      "configurationProperties.required",
      "configurationProperties.secret",
      "configurationProperties.type",
      "settings.revisionUrlTemplate",
      "settings.thirdPartyConfigurationUrl"
    ]
  },
  {
    "module": "aws-codepipeline",
    "name": "CfnPipeline",
    "missingProps": [
      "tags",
      "artifactStore.encryptionKey",
      "artifactStore.location",
      "artifactStore.type",
      "artifactStores.artifactStore",
      "artifactStores.region",
      "disableInboundStageTransitions.reason",
      "disableInboundStageTransitions.stageName",
      "stages.actions",
      "stages.beforeEntry",
      "stages.blockers",
      "stages.name",
      "stages.onFailure",
      "stages.onSuccess",
      "triggers.gitConfiguration",
      "triggers.providerType",
      "variables.defaultValue",
      "variables.description",
      "variables.name"
    ]
  },
  {
    "module": "aws-codedeploy",
    "name": "CfnApplication",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-codedeploy",
    "name": "CfnDeploymentConfig",
    "missingProps": [
      "minimumHealthyHosts.type",
      "minimumHealthyHosts.value",
      "trafficRoutingConfig.timeBasedCanary",
      "trafficRoutingConfig.timeBasedLinear",
      "trafficRoutingConfig.type",
      "zonalConfig.firstZoneMonitorDurationInSeconds",
      "zonalConfig.minimumHealthyHostsPerZone",
      "zonalConfig.monitorDurationInSeconds"
    ]
  },
  {
    "module": "aws-codedeploy",
    "name": "CfnDeploymentGroup",
    "missingProps": [
      "blueGreenDeploymentConfiguration",
      "deployment",
      "ec2TagFilters",
      "ecsServices",
      "onPremisesInstanceTagFilters",
      "outdatedInstancesStrategy",
      "tags",
      "triggerConfigurations",
      "alarmConfiguration.alarms",
      "alarmConfiguration.enabled",
      "alarmConfiguration.ignorePollAlarmFailure",
      "autoRollbackConfiguration.enabled",
      "autoRollbackConfiguration.events",
      "deploymentStyle.deploymentOption",
      "deploymentStyle.deploymentType",
      "ec2TagSet.ec2TagSetList",
      "loadBalancerInfo.elbInfoList",
      "loadBalancerInfo.targetGroupInfoList",
      "loadBalancerInfo.targetGroupPairInfoList",
      "onPremisesTagSet.onPremisesTagSetList"
    ]
  },
  {
    "module": "aws-codecommit",
    "name": "CfnRepository",
    "missingProps": [
      "tags",
      "code.branchName",
      "code.s3",
      "triggers.branches",
      "triggers.customData",
      "triggers.destinationArn",
      "triggers.events",
      "triggers.name"
    ]
  },
  {
    "module": "aws-codebuild",
    "name": "CfnFleet",
    "missingProps": [
      "fleetProxyConfiguration",
      "imageId",
      "scalingConfiguration",
      "tags",
      "computeConfiguration.disk",
      "computeConfiguration.instanceType",
      "computeConfiguration.machineType",
      "computeConfiguration.memory",
      "computeConfiguration.vCpu",
      "fleetVpcConfig.securityGroupIds",
      "fleetVpcConfig.subnets",
      "fleetVpcConfig.vpcId"
    ]
  },
  {
    "module": "aws-codebuild",
    "name": "CfnProject",
    "missingProps": [
      "resourceAccessRole",
      "tags",
      "artifacts.artifactIdentifier",
      "artifacts.encryptionDisabled",
      "artifacts.location",
      "artifacts.name",
      "artifacts.namespaceType",
      "artifacts.overrideArtifactName",
      "artifacts.packaging",
      "artifacts.path",
      "artifacts.type",
      "buildBatchConfig.batchReportMode",
      "buildBatchConfig.combineArtifacts",
      "buildBatchConfig.restrictions",
      "buildBatchConfig.serviceRole",
      "buildBatchConfig.timeoutInMins",
      "cache.cacheNamespace",
      "cache.location",
      "cache.modes",
      "cache.type",
      "environment.certificate",
      "environment.computeType",
      "environment.dockerServer",
      "environment.environmentVariables",
      "environment.fleet",
      "environment.image",
      "environment.imagePullCredentialsType",
      "environment.privilegedMode",
      "environment.registryCredential",
      "environment.type",
      "fileSystemLocations.identifier",
      "fileSystemLocations.location",
      "fileSystemLocations.mountOptions",
      "fileSystemLocations.mountPoint",
      "fileSystemLocations.type",
      "logsConfig.cloudWatchLogs",
      "logsConfig.s3Logs",
      "secondaryArtifacts.artifactIdentifier",
      "secondaryArtifacts.encryptionDisabled",
      "secondaryArtifacts.location",
      "secondaryArtifacts.name",
      "secondaryArtifacts.namespaceType",
      "secondaryArtifacts.overrideArtifactName",
      "secondaryArtifacts.packaging",
      "secondaryArtifacts.path",
      "secondaryArtifacts.type",
      "secondarySources.auth",
      "secondarySources.buildSpec",
      "secondarySources.buildStatusConfig",
      "secondarySources.gitCloneDepth",
      "secondarySources.gitSubmodulesConfig",
      "secondarySources.insecureSsl",
      "secondarySources.location",
      "secondarySources.reportBuildStatus",
      "secondarySources.sourceIdentifier",
      "secondarySources.type",
      "secondarySourceVersions.sourceIdentifier",
      "secondarySourceVersions.sourceVersion",
      "source.auth",
      "source.buildStatusConfig",
      "source.gitCloneDepth",
      "source.gitSubmodulesConfig",
      "source.insecureSsl",
      "source.location",
      "source.reportBuildStatus",
      "source.sourceIdentifier",
      "source.type",
      "triggers.buildType",
      "triggers.filterGroups",
      "triggers.pullRequestBuildPolicy",
      "triggers.scopeConfiguration",
      "triggers.webhook",
      "vpcConfig.securityGroupIds",
      "vpcConfig.subnets",
      "vpcConfig.vpcId"
    ]
  },
  {
    "module": "aws-codebuild",
    "name": "CfnReportGroup",
    "missingProps": [
      "tags",
      "exportConfig.s3Destination.bucket",
      "exportConfig.s3Destination.bucketOwner",
      "exportConfig.s3Destination.encryptionDisabled",
      "exportConfig.s3Destination.encryptionKey",
      "exportConfig.s3Destination.packaging",
      "exportConfig.s3Destination.path"
    ]
  },
  {
    "module": "aws-codebuild",
    "name": "CfnSourceCredential",
    "missingProps": [
      "username"
    ]
  },
  {
    "module": "aws-cloudwatch",
    "name": "CfnAlarm",
    "missingProps": [
      "dimensions",
      "extendedStatistic",
      "metricName",
      "metrics",
      "namespace",
      "period",
      "statistic",
      "tags",
      "unit"
    ]
  },
  {
    "module": "aws-cloudwatch",
    "name": "CfnCompositeAlarm",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-cloudtrail",
    "name": "CfnTrail",
    "missingProps": [
      "advancedEventSelectors",
      "tags",
      "eventSelectors.dataResources",
      "eventSelectors.excludeManagementEventSources",
      "eventSelectors.includeManagementEvents",
      "eventSelectors.readWriteType",
      "insightSelectors.insightType"
    ]
  },
  {
    "module": "aws-cloudfront",
    "name": "CfnCachePolicy",
    "missingProps": [
      "cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin.cookiesConfig",
      "cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin.enableAcceptEncodingBrotli",
      "cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin.enableAcceptEncodingGzip",
      "cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin.headersConfig",
      "cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin.queryStringsConfig"
    ]
  },
  {
    "module": "aws-cloudfront",
    "name": "CfnDistribution",
    "missingProps": [
      "tags",
      "distributionConfig.anycastIpListId",
      "distributionConfig.cnamEs",
      "distributionConfig.connectionMode",
      "distributionConfig.continuousDeploymentPolicyId",
      "distributionConfig.customOrigin",
      "distributionConfig.s3Origin",
      "distributionConfig.staging",
      "distributionConfig.tenantConfig",
      "distributionConfig.cacheBehaviors.allowedMethods",
      "distributionConfig.cacheBehaviors.cachedMethods",
      "distributionConfig.cacheBehaviors.cachePolicyId",
      "distributionConfig.cacheBehaviors.compress",
      "distributionConfig.cacheBehaviors.defaultTtl",
      "distributionConfig.cacheBehaviors.fieldLevelEncryptionId",
      "distributionConfig.cacheBehaviors.forwardedValues",
      "distributionConfig.cacheBehaviors.functionAssociations",
      "distributionConfig.cacheBehaviors.grpcConfig",
      "distributionConfig.cacheBehaviors.lambdaFunctionAssociations",
      "distributionConfig.cacheBehaviors.maxTtl",
      "distributionConfig.cacheBehaviors.minTtl",
      "distributionConfig.cacheBehaviors.originRequestPolicyId",
      "distributionConfig.cacheBehaviors.pathPattern",
      "distributionConfig.cacheBehaviors.realtimeLogConfigArn",
      "distributionConfig.cacheBehaviors.responseHeadersPolicyId",
      "distributionConfig.cacheBehaviors.smoothStreaming",
      "distributionConfig.cacheBehaviors.targetOriginId",
      "distributionConfig.cacheBehaviors.trustedKeyGroups",
      "distributionConfig.cacheBehaviors.trustedSigners",
      "distributionConfig.cacheBehaviors.viewerProtocolPolicy",
      "distributionConfig.customErrorResponses.errorCachingMinTtl",
      "distributionConfig.customErrorResponses.errorCode",
      "distributionConfig.customErrorResponses.responseCode",
      "distributionConfig.customErrorResponses.responsePagePath",
      "distributionConfig.defaultCacheBehavior.allowedMethods",
      "distributionConfig.defaultCacheBehavior.cachedMethods",
      "distributionConfig.defaultCacheBehavior.cachePolicyId",
      "distributionConfig.defaultCacheBehavior.compress",
      "distributionConfig.defaultCacheBehavior.defaultTtl",
      "distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId",
      "distributionConfig.defaultCacheBehavior.forwardedValues",
      "distributionConfig.defaultCacheBehavior.functionAssociations",
      "distributionConfig.defaultCacheBehavior.grpcConfig",
      "distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations",
      "distributionConfig.defaultCacheBehavior.maxTtl",
      "distributionConfig.defaultCacheBehavior.minTtl",
      "distributionConfig.defaultCacheBehavior.originRequestPolicyId",
      "distributionConfig.defaultCacheBehavior.realtimeLogConfigArn",
      "distributionConfig.defaultCacheBehavior.responseHeadersPolicyId",
      "distributionConfig.defaultCacheBehavior.smoothStreaming",
      "distributionConfig.defaultCacheBehavior.targetOriginId",
      "distributionConfig.defaultCacheBehavior.trustedKeyGroups",
      "distributionConfig.defaultCacheBehavior.trustedSigners",
      "distributionConfig.defaultCacheBehavior.viewerProtocolPolicy",
      "distributionConfig.logging.bucket",
      "distributionConfig.logging.enabled",
      "distributionConfig.logging.prefix",
      "distributionConfig.originGroups.items",
      "distributionConfig.originGroups.quantity",
      "distributionConfig.origins.connectionAttempts",
      "distributionConfig.origins.connectionTimeout",
      "distributionConfig.origins.customOriginConfig",
      "distributionConfig.origins.domainName",
      "distributionConfig.origins.id",
      "distributionConfig.origins.originAccessControlId",
      "distributionConfig.origins.originCustomHeaders",
      "distributionConfig.origins.originPath",
      "distributionConfig.origins.originShield",
      "distributionConfig.origins.responseCompletionTimeout",
      "distributionConfig.origins.s3OriginConfig",
      "distributionConfig.origins.vpcOriginConfig",
      "distributionConfig.restrictions.geoRestriction",
      "distributionConfig.viewerCertificate.acmCertificateArn",
      "distributionConfig.viewerCertificate.cloudFrontDefaultCertificate",
      "distributionConfig.viewerCertificate.iamCertificateId",
      "distributionConfig.viewerCertificate.minimumProtocolVersion",
      "distributionConfig.viewerCertificate.sslSupportMethod"
    ]
  },
  {
    "module": "aws-cloudfront",
    "name": "CfnFunction",
    "missingProps": [
      "functionMetadata",
      "functionConfig.keyValueStoreAssociations.keyValueStoreArn"
    ]
  },
  {
    "module": "aws-cloudfront",
    "name": "CfnKeyValueStore",
    "missingProps": [
      "importSource.sourceArn",
      "importSource.sourceType"
    ]
  },
  {
    "module": "aws-cloudfront",
    "name": "CfnRealtimeLogConfig",
    "missingProps": [
      "endPoints.kinesisStreamConfig",
      "endPoints.streamType"
    ]
  },
  {
    "module": "aws-cloudfront",
    "name": "CfnResponseHeadersPolicy",
    "missingProps": [
      "responseHeadersPolicyConfig.corsConfig.accessControlAllowCredentials",
      "responseHeadersPolicyConfig.corsConfig.accessControlAllowHeaders",
      "responseHeadersPolicyConfig.corsConfig.accessControlAllowMethods",
      "responseHeadersPolicyConfig.corsConfig.accessControlAllowOrigins",
      "responseHeadersPolicyConfig.corsConfig.accessControlExposeHeaders",
      "responseHeadersPolicyConfig.corsConfig.accessControlMaxAgeSec",
      "responseHeadersPolicyConfig.corsConfig.originOverride",
      "responseHeadersPolicyConfig.customHeadersConfig.items",
      "responseHeadersPolicyConfig.removeHeadersConfig.items",
      "responseHeadersPolicyConfig.securityHeadersConfig.contentSecurityPolicy",
      "responseHeadersPolicyConfig.securityHeadersConfig.contentTypeOptions",
      "responseHeadersPolicyConfig.securityHeadersConfig.frameOptions",
      "responseHeadersPolicyConfig.securityHeadersConfig.referrerPolicy",
      "responseHeadersPolicyConfig.securityHeadersConfig.strictTransportSecurity",
      "responseHeadersPolicyConfig.securityHeadersConfig.xssProtection",
      "responseHeadersPolicyConfig.serverTimingHeadersConfig.enabled",
      "responseHeadersPolicyConfig.serverTimingHeadersConfig.samplingRate"
    ]
  },
  {
    "module": "aws-cloudfront",
    "name": "CfnVpcOrigin",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-chatbot",
    "name": "CfnSlackChannelConfiguration",
    "missingProps": [
      "customizationResourceArns",
      "tags"
    ]
  },
  {
    "module": "aws-certificatemanager",
    "name": "CfnCertificate",
    "missingProps": [
      "certificateTransparencyLoggingPreference",
      "domainValidationOptions",
      "tags",
      "validationMethod"
    ]
  },
  {
    "module": "aws-batch",
    "name": "CfnComputeEnvironment",
    "missingProps": [
      "computeResources",
      "context",
      "eksConfiguration",
      "replaceComputeEnvironment",
      "tags",
      "updatePolicy"
    ]
  },
  {
    "module": "aws-batch",
    "name": "CfnJobDefinition",
    "missingProps": [
      "consumableResourceProperties",
      "containerProperties",
      "ecsProperties",
      "eksProperties",
      "parameters",
      "retryStrategy",
      "schedulingPriority",
      "tags",
      "timeout",
      "nodeProperties.nodeRangeProperties.consumableResourceProperties",
      "nodeProperties.nodeRangeProperties.container",
      "nodeProperties.nodeRangeProperties.ecsProperties",
      "nodeProperties.nodeRangeProperties.eksProperties",
      "nodeProperties.nodeRangeProperties.instanceTypes",
      "nodeProperties.nodeRangeProperties.targetNodes"
    ]
  },
  {
    "module": "aws-batch",
    "name": "CfnJobQueue",
    "missingProps": [
      "jobQueueType",
      "serviceEnvironmentOrder",
      "tags",
      "computeEnvironmentOrder.computeEnvironment",
      "computeEnvironmentOrder.order",
      "jobStateTimeLimitActions.action",
      "jobStateTimeLimitActions.maxTimeSeconds",
      "jobStateTimeLimitActions.reason",
      "jobStateTimeLimitActions.state"
    ]
  },
  {
    "module": "aws-batch",
    "name": "CfnSchedulingPolicy",
    "missingProps": [
      "tags",
      "fairsharePolicy.shareDistribution.shareIdentifier",
      "fairsharePolicy.shareDistribution.weightFactor"
    ]
  },
  {
    "module": "aws-backup",
    "name": "CfnBackupPlan",
    "missingProps": [
      "backupPlanTags",
      "backupPlan.advancedBackupSettings.backupOptions",
      "backupPlan.advancedBackupSettings.resourceType",
      "backupPlan.backupPlanRule.completionWindowMinutes",
      "backupPlan.backupPlanRule.copyActions",
      "backupPlan.backupPlanRule.enableContinuousBackup",
      "backupPlan.backupPlanRule.indexActions",
      "backupPlan.backupPlanRule.lifecycle",
      "backupPlan.backupPlanRule.recoveryPointTags",
      "backupPlan.backupPlanRule.ruleName",
      "backupPlan.backupPlanRule.scheduleExpression",
      "backupPlan.backupPlanRule.scheduleExpressionTimezone",
      "backupPlan.backupPlanRule.startWindowMinutes",
      "backupPlan.backupPlanRule.targetBackupVault"
    ]
  },
  {
    "module": "aws-backup",
    "name": "CfnBackupSelection",
    "missingProps": [
      "backupSelection.conditions",
      "backupSelection.notResources",
      "backupSelection.listOfTags.conditionKey",
      "backupSelection.listOfTags.conditionType",
      "backupSelection.listOfTags.conditionValue"
    ]
  },
  {
    "module": "aws-backup",
    "name": "CfnBackupVault",
    "missingProps": [
      "backupVaultTags",
      "lockConfiguration.changeableForDays",
      "lockConfiguration.maxRetentionDays",
      "lockConfiguration.minRetentionDays",
      "notifications.backupVaultEvents",
      "notifications.snsTopicArn"
    ]
  },
  {
    "module": "aws-autoscaling",
    "name": "CfnScalingPolicy",
    "missingProps": [
      "adjustmentType",
      "metricAggregationType",
      "minAdjustmentMagnitude",
      "predictiveScalingConfiguration",
      "scalingAdjustment",
      "stepAdjustments",
      "targetTrackingConfiguration.customizedMetricSpecification.dimensions",
      "targetTrackingConfiguration.customizedMetricSpecification.metricName",
      "targetTrackingConfiguration.customizedMetricSpecification.metrics",
      "targetTrackingConfiguration.customizedMetricSpecification.namespace",
      "targetTrackingConfiguration.customizedMetricSpecification.period",
      "targetTrackingConfiguration.customizedMetricSpecification.statistic",
      "targetTrackingConfiguration.customizedMetricSpecification.unit",
      "targetTrackingConfiguration.predefinedMetricSpecification.predefinedMetricType",
      "targetTrackingConfiguration.predefinedMetricSpecification.resourceLabel"
    ]
  },
  {
    "module": "aws-autoscaling",
    "name": "CfnWarmPool",
    "missingProps": [
      "instanceReusePolicy.reuseOnScaleIn"
    ]
  },
  {
    "module": "aws-appsync",
    "name": "CfnApi",
    "missingProps": [
      "tags",
      "eventConfig.authProviders",
      "eventConfig.connectionAuthModes",
      "eventConfig.defaultPublishAuthModes",
      "eventConfig.defaultSubscribeAuthModes",
      "eventConfig.logConfig"
    ]
  },
  {
    "module": "aws-appsync",
    "name": "CfnChannelNamespace",
    "missingProps": [
      "tags",
      "handlerConfigs.onPublish",
      "handlerConfigs.onSubscribe",
      "publishAuthModes.authType",
      "subscribeAuthModes.authType"
    ]
  },
  {
    "module": "aws-appsync",
    "name": "CfnDataSource",
    "missingProps": [
      "dynamoDbConfig",
      "elasticsearchConfig",
      "eventBridgeConfig",
      "httpConfig",
      "lambdaConfig",
      "metricsConfig",
      "openSearchServiceConfig",
      "relationalDatabaseConfig",
      "type"
    ]
  },
  {
    "module": "aws-appsync",
    "name": "CfnFunctionConfiguration",
    "missingProps": [
      "requestMappingTemplateS3Location",
      "responseMappingTemplateS3Location",
      "syncConfig",
      "runtime.name",
      "runtime.runtimeVersion"
    ]
  },
  {
    "module": "aws-appsync",
    "name": "CfnGraphQLApi",
    "missingProps": [
      "enhancedMetricsConfig",
      "tags",
      "additionalAuthenticationProviders.authenticationType",
      "additionalAuthenticationProviders.lambdaAuthorizerConfig",
      "additionalAuthenticationProviders.openIdConnectConfig",
      "additionalAuthenticationProviders.userPoolConfig",
      "lambdaAuthorizerConfig.authorizerResultTtlInSeconds",
      "lambdaAuthorizerConfig.authorizerUri",
      "lambdaAuthorizerConfig.identityValidationExpression",
      "logConfig.cloudWatchLogsRoleArn",
      "logConfig.excludeVerboseContent",
      "logConfig.fieldLogLevel",
      "openIdConnectConfig.authTtl",
      "openIdConnectConfig.clientId",
      "openIdConnectConfig.iatTtl",
      "openIdConnectConfig.issuer",
      "userPoolConfig.appIdClientRegex",
      "userPoolConfig.awsRegion",
      "userPoolConfig.defaultAction",
      "userPoolConfig.userPoolId"
    ]
  },
  {
    "module": "aws-appsync",
    "name": "CfnResolver",
    "missingProps": [
      "metricsConfig",
      "requestMappingTemplateS3Location",
      "responseMappingTemplateS3Location",
      "syncConfig",
      "cachingConfig.cachingKeys",
      "cachingConfig.ttl",
      "pipelineConfig.functions",
      "runtime.name",
      "runtime.runtimeVersion"
    ]
  },
  {
    "module": "aws-appmesh",
    "name": "CfnGatewayRoute",
    "missingProps": [
      "tags",
      "spec.grpcRoute.action",
      "spec.grpcRoute.match",
      "spec.http2Route.action",
      "spec.http2Route.match",
      "spec.httpRoute.action",
      "spec.httpRoute.match"
    ]
  },
  {
    "module": "aws-appmesh",
    "name": "CfnMesh",
    "missingProps": [
      "tags",
      "spec.egressFilter.type",
      "spec.serviceDiscovery.ipPreference"
    ]
  },
  {
    "module": "aws-appmesh",
    "name": "CfnRoute",
    "missingProps": [
      "tags",
      "spec.grpcRoute.action",
      "spec.grpcRoute.match",
      "spec.grpcRoute.retryPolicy",
      "spec.grpcRoute.timeout",
      "spec.http2Route.action",
      "spec.http2Route.match",
      "spec.http2Route.retryPolicy",
      "spec.http2Route.timeout",
      "spec.httpRoute.action",
      "spec.httpRoute.match",
      "spec.httpRoute.retryPolicy",
      "spec.httpRoute.timeout",
      "spec.tcpRoute.action",
      "spec.tcpRoute.match",
      "spec.tcpRoute.timeout"
    ]
  },
  {
    "module": "aws-appmesh",
    "name": "CfnVirtualGateway",
    "missingProps": [
      "tags",
      "spec.backendDefaults.clientPolicy",
      "spec.listeners.connectionPool",
      "spec.listeners.healthCheck",
      "spec.listeners.portMapping",
      "spec.listeners.tls",
      "spec.logging.accessLog"
    ]
  },
  {
    "module": "aws-appmesh",
    "name": "CfnVirtualNode",
    "missingProps": [
      "tags",
      "spec.backendDefaults.clientPolicy",
      "spec.backends.virtualService",
      "spec.listeners.connectionPool",
      "spec.listeners.healthCheck",
      "spec.listeners.outlierDetection",
      "spec.listeners.portMapping",
      "spec.listeners.timeout",
      "spec.listeners.tls",
      "spec.logging.accessLog",
      "spec.serviceDiscovery.awsCloudMap",
      "spec.serviceDiscovery.dns"
    ]
  },
  {
    "module": "aws-appmesh",
    "name": "CfnVirtualRouter",
    "missingProps": [
      "tags",
      "spec.listeners.portMapping"
    ]
  },
  {
    "module": "aws-appmesh",
    "name": "CfnVirtualService",
    "missingProps": [
      "tags",
      "spec.provider.virtualNode",
      "spec.provider.virtualRouter"
    ]
  },
  {
    "module": "aws-applicationautoscaling",
    "name": "CfnScalableTarget",
    "missingProps": [
      "suspendedState",
      "scheduledActions.endTime",
      "scheduledActions.scalableTargetAction",
      "scheduledActions.schedule",
      "scheduledActions.scheduledActionName",
      "scheduledActions.startTime",
      "scheduledActions.timezone"
    ]
  },
  {
    "module": "aws-applicationautoscaling",
    "name": "CfnScalingPolicy",
    "missingProps": [
      "predictiveScalingPolicyConfiguration",
      "resourceId",
      "scalableDimension",
      "serviceNamespace",
      "stepScalingPolicyConfiguration",
      "targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.dimensions",
      "targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.metricName",
      "targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.metrics",
      "targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.namespace",
      "targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.statistic",
      "targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.unit",
      "targetTrackingScalingPolicyConfiguration.predefinedMetricSpecification.predefinedMetricType",
      "targetTrackingScalingPolicyConfiguration.predefinedMetricSpecification.resourceLabel"
    ]
  },
  {
    "module": "aws-appconfig",
    "name": "CfnApplication",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-appconfig",
    "name": "CfnConfigurationProfile",
    "missingProps": [
      "kmsKeyIdentifier",
      "tags",
      "validators.content",
      "validators.type"
    ]
  },
  {
    "module": "aws-appconfig",
    "name": "CfnDeploymentStrategy",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-appconfig",
    "name": "CfnEnvironment",
    "missingProps": [
      "tags",
      "monitors.alarmArn",
      "monitors.alarmRoleArn"
    ]
  },
  {
    "module": "aws-appconfig",
    "name": "CfnExtension",
    "missingProps": [
      "tags",
      "parameters.description",
      "parameters.dynamic",
      "parameters.required"
    ]
  },
  {
    "module": "aws-apigatewayv2",
    "name": "CfnApi",
    "missingProps": [
      "basePath",
      "body",
      "bodyS3Location",
      "corsConfiguration",
      "credentialsArn",
      "disableExecuteApiEndpoint",
      "failOnWarnings",
      "routeKey",
      "tags",
      "target",
      "version"
    ]
  },
  {
    "module": "aws-apigatewayv2",
    "name": "CfnAuthorizer",
    "missingProps": [
      "authorizerCredentialsArn",
      "authorizerPayloadFormatVersion",
      "authorizerResultTtlInSeconds",
      "enableSimpleResponses",
      "identityValidationExpression",
      "jwtConfiguration"
    ]
  },
  {
    "module": "aws-apigatewayv2",
    "name": "CfnIntegration",
    "missingProps": [
      "connectionId",
      "connectionType",
      "description",
      "integrationSubtype",
      "payloadFormatVersion",
      "responseParameters",
      "tlsConfig"
    ]
  },
  {
    "module": "aws-apigatewayv2",
    "name": "CfnRoute",
    "missingProps": [
      "authorizationScopes",
      "modelSelectionExpression",
      "operationName",
      "requestModels",
      "requestParameters"
    ]
  },
  {
    "module": "aws-apigatewayv2",
    "name": "CfnStage",
    "missingProps": [
      "accessLogSettings",
      "accessPolicyId",
      "clientCertificateId",
      "deploymentId",
      "routeSettings",
      "tags",
      "defaultRouteSettings.dataTraceEnabled",
      "defaultRouteSettings.detailedMetricsEnabled",
      "defaultRouteSettings.loggingLevel",
      "defaultRouteSettings.throttlingBurstLimit",
      "defaultRouteSettings.throttlingRateLimit"
    ]
  },
  {
    "module": "aws-apigatewayv2",
    "name": "CfnVpcLink",
    "missingProps": [
      "tags"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnApiKey",
    "missingProps": [
      "tags",
      "stageKeys.restApiId",
      "stageKeys.stageName"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnBasePathMapping",
    "missingProps": [
      "id"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnDomainName",
    "missingProps": [
      "ownershipVerificationCertificateArn",
      "routingMode",
      "tags",
      "endpointConfiguration.ipAddressType",
      "mutualTlsAuthentication.truststoreUri",
      "mutualTlsAuthentication.truststoreVersion"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnRestApi",
    "missingProps": [
      "apiKeySourceType",
      "binaryMediaTypes",
      "cloneFrom",
      "description",
      "securityPolicy",
      "tags",
      "bodyS3Location.bucket",
      "bodyS3Location.eTag",
      "bodyS3Location.key",
      "bodyS3Location.version",
      "endpointConfiguration.ipAddressType",
      "endpointConfiguration.types"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnStage",
    "missingProps": [
      "canarySetting",
      "tags",
      "accessLogSetting.destinationArn",
      "accessLogSetting.format",
      "methodSettings.cacheDataEncrypted",
      "methodSettings.cacheTtlInSeconds",
      "methodSettings.cachingEnabled",
      "methodSettings.dataTraceEnabled",
      "methodSettings.httpMethod",
      "methodSettings.loggingLevel",
      "methodSettings.metricsEnabled",
      "methodSettings.resourcePath",
      "methodSettings.throttlingBurstLimit",
      "methodSettings.throttlingRateLimit"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnUsagePlan",
    "missingProps": [
      "tags",
      "apiStages.apiId",
      "apiStages.stage",
      "apiStages.throttle",
      "quota.limit",
      "quota.offset",
      "quota.period",
      "throttle.burstLimit",
      "throttle.rateLimit"
    ]
  },
  {
    "module": "aws-apigateway",
    "name": "CfnVpcLink",
    "missingProps": [
      "tags"
    ]
  }
]